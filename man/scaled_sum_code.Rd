% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scaled_sum_code.R
\name{scaled_sum_code}
\alias{scaled_sum_code}
\title{Scaled sum coding}
\usage{
scaled_sum_code(n_levels)
}
\arguments{
\item{n_levels}{number of levels for this factor}
}
\value{
A matrix of scaled sum coded contrasts, unlabeled
}
\description{
This is also sometimes called simple or deviation coding.
}
\details{
For n levels of factors, generate a matrix with n-1 comparisons where:
\itemize{
 \item Reference level = -1/n
 \item Comparison level = (n-1)/n
 \item All others = -1/n
}

Example interpretation for a 4 level factor:
\itemize{
 \item Intercept = Grand mean (mean of the means of each level)
 \item grp2 = mean(grp2) - mean(grp1)
 \item grp3 = mean(grp3) - mean(grp1)
 \item grp4 = mean(grp4) - mean(grp1)
}
Note: grp coefficient estimates are the same as with contr.treatment, but
the intercept is changed to the grand mean instead of the mean of grp1.

IMPORTANT: This coding scheme is NOT the same as contr.sum/2 when the number
of levels is GREATER than 2. When k=2, estimates with contr.sum can be interpreted
as "half the distance between levels" but when k>2, contr.sum is to be interpreted
as "the distance between this level and the GRAND MEAN". You may be tempted
to use contr.sum(k)/2, but I'm really not sure how the estimates can even
be interpreted, and it's definitely not what you're looking for here.
}
\examples{
# Compare these two, note that contr.sum(4)/2 is not the same
scaled_sum_code(4)
contr.sum(4)

# Here they happen to be equivalent (well, aside from the reference level contr.sum uses)
scaled_sum_code(2)
contr.sum(2)/2

mydf <- data.frame(
   grp = factor(c(rep("F1",5),rep("F2",5),rep("F3",5),rep("F4",5))),
   resp = c(seq(1,5), seq(5,9), seq(10,14), seq(15,19))
)

mydf \%>\%
  dplyr::group_by(grp) \%>\%
  dplyr::summarize(mu = mean(resp)) \%>\%
  dplyr::ungroup() \%>\%
  dplyr::mutate(grand_mean = mean(mu))

summary(lm(resp ~ grp,
           data = mydf,
           contrasts = enlist_contrasts(mydf, grp ~ scaled_sum_code)))
}
