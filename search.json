[{"path":"https://tsostarics.github.io/contrastable/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Thomas Sostarics Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://tsostarics.github.io/contrastable/articles/contrastable.html","id":"setting-contrasts-to-data-frame-columns","dir":"Articles","previous_headings":"","what":"Setting contrasts to data frame columns","title":"contrastable","text":"three main functions ’ll discuss order: set_contrasts: set contrasts directly factor columns enlist_contrasts: get list contrast matrices glimpse_contrasts: get summary table contrast information three use shared two-sided formula syntax, example: varname: variable name column whose contrasts want set. contrast_scheme: (often) function creates contrast matrices, can also variable assigned matrix (eg my_mat <- matrix(...), my_mat can used) hypr object. reference: Use + operator set reference level. usually baseline use pairwise comparisons. levels varname c(\"High\", \"Mid\", \"Low\"), might set Low + \"Low\" intercept: Use * operator set intercept, overwriting whatever default given contrast scheme. example, intercept (reference level) treatment_code usually first level alphabetically, changed. example, * \"Mid\" dropped: Use - operator remove comparisons contrast matrix. used set_contrasts(). Sometimes used polynomial contrasts. labels: Use | operator set comparison labels, overwriting defaults contrast scheme. example, pairwise comparisons varname using treatment_code levels c(\"High\", \"Mid\", \"Low\") High default reference level, default coefficient names varnameMid varnameLow. can use | c(\"Mid-High\", \"Low-High\") change output varnameMid-High varnameLow-High. operators can used order, contrast_scheme always first thing ~.","code":"enlist_contrasts(my_dataframe,                   varname ~ contrast_scheme + reference * intercept - dropped | labels)"},{"path":"https://tsostarics.github.io/contrastable/articles/contrastable.html","id":"set_contrasts","dir":"Articles","previous_headings":"Setting contrasts to data frame columns","what":"set_contrasts","title":"contrastable","text":"Use set contrasts directly column, coercing factor necessary. Often used last step wrangling pipeline. result assigned variable. can set print_contrasts = TRUE print contrasts set. set contrasts binary gear_type variable use scaled sum coding odd reference level setting comparison label something informative, reflected model summary. can set multiple columns listing multiple columns left hand side, separated + can also use tidyselect functionality target multiple columns. Note , specify duplicated column names.","code":"model_data <-   mtcars |>   dplyr::mutate(gear_type = ifelse(gear %% 2 == 0, \"even\", \"odd\")) |>   set_contrasts(gear_type ~ scaled_sum_code + \"odd\" | c(\"Odd-Even\"),                 print_contrasts = TRUE) #> Converting to factors: gear_type #> $gear_type #>      Odd-Even #> even  1/2     #> odd  -1/2  summary(lm(mpg ~ gear_type, data = model_data)) #>  #> Call: #> lm(formula = mpg ~ gear_type, data = model_data) #>  #> Residuals: #>    Min     1Q Median     3Q    Max  #> -7.025 -3.127 -1.679  2.398 12.975  #>  #> Coefficients: #>                   Estimate Std. Error t value Pr(>|t|)     #> (Intercept)        20.9792     0.9111  23.026  < 2e-16 *** #> gear_typeOdd-Even   7.1083     1.8222   3.901 0.000501 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 4.99 on 30 degrees of freedom #> Multiple R-squared:  0.3365, Adjusted R-squared:  0.3144  #> F-statistic: 15.22 on 1 and 30 DF,  p-value: 0.0005009 model_data <-   mtcars |>   dplyr::mutate(gear_type = ifelse(gear %% 2 == 0, \"even\", \"odd\")) |>   set_contrasts(gear_type ~ scaled_sum_code + \"odd\" | c(\"Odd-Even\"),                 print_contrasts = TRUE,                 carb + cyl ~ helmert_code) #> Converting to factors: gear_type carb cyl #> $gear_type #>      Odd-Even #> even  1/2     #> odd  -1/2     #>  #> $carb #>   <2   <3   <4   <6   <8   #> 1 -1/2 -1/3 -1/4 -1/5 -1/6 #> 2  1/2 -1/3 -1/4 -1/5 -1/6 #> 3    0  2/3 -1/4 -1/5 -1/6 #> 4    0    0  3/4 -1/5 -1/6 #> 6    0    0    0  4/5 -1/6 #> 8    0    0    0    0  5/6 #>  #> $cyl #>   <6   <8   #> 4 -1/2 -1/3 #> 6  1/2 -1/3 #> 8    0  2/3  summary(lm(mpg ~ gear_type + carb + cyl, data = model_data)) #>  #> Call: #> lm(formula = mpg ~ gear_type + carb + cyl, data = model_data) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -5.5190 -1.6626  0.0115  1.8229  6.3961  #>  #> Coefficients: #>                   Estimate Std. Error t value Pr(>|t|)     #> (Intercept)       20.76667    0.98358  21.113   <2e-16 *** #> gear_typeOdd-Even  1.91122    1.94985   0.980   0.3372     #> carb<2            -0.58488    1.79537  -0.326   0.7475     #> carb<3            -0.56951    2.54671  -0.224   0.8250     #> carb<4            -3.14772    1.67694  -1.877   0.0733 .   #> carb<6             0.07335    3.89232   0.019   0.9851     #> carb<8            -0.90741    3.61691  -0.251   0.8041     #> cyl<6             -4.69683    2.14496  -2.190   0.0390 *   #> cyl<8             -6.08232    2.23460  -2.722   0.0122 *   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 3.361 on 23 degrees of freedom #> Multiple R-squared:  0.7693, Adjusted R-squared:  0.689  #> F-statistic: 9.586 on 8 and 23 DF,  p-value: 9.454e-06 model_data <-   mtcars |>   dplyr::mutate(gear_type = ifelse(gear %% 2 == 0, \"even\", \"odd\")) |>   set_contrasts(gear_type ~ scaled_sum_code + \"odd\" | c(\"Odd-Even\"),                 vs:carb ~ helmert_code,                 print_contrasts = TRUE) #> Converting to factors: gear_type vs am gear carb #> $gear_type #>      Odd-Even #> even  1/2     #> odd  -1/2     #>  #> $vs #>   <1   #> 0 -1/2 #> 1  1/2 #>  #> $am #>   <1   #> 0 -1/2 #> 1  1/2 #>  #> $gear #>   <4   <5   #> 3 -1/2 -1/3 #> 4  1/2 -1/3 #> 5    0  2/3 #>  #> $carb #>   <2   <3   <4   <6   <8   #> 1 -1/2 -1/3 -1/4 -1/5 -1/6 #> 2  1/2 -1/3 -1/4 -1/5 -1/6 #> 3    0  2/3 -1/4 -1/5 -1/6 #> 4    0    0  3/4 -1/5 -1/6 #> 6    0    0    0  4/5 -1/6 #> 8    0    0    0    0  5/6"},{"path":"https://tsostarics.github.io/contrastable/articles/contrastable.html","id":"enlist_contrasts","dir":"Articles","previous_headings":"","what":"enlist_contrasts","title":"contrastable","text":"Used get named list contrast matrices. Useful pass contrasts argument modeling function available. can also use matrix objects setting contrasts: Note reference level always first level factor, typically alphanumeric order. example, contr.sum usually sets last level reference, can see using package’s functions ’s always first level (sum coding, row -1). behavior can suppressed wrapping contrast scheme (), issue warning:","code":"model_contrasts <-   mtcars |>   dplyr::mutate(gear_type = ifelse(gear %% 2 == 0, \"even\", \"odd\")) |>   enlist_contrasts(gear_type ~ scaled_sum_code + \"odd\" | c(\"Odd-Even\")) #> Converting to factors: gear_type  model_contrasts #> $gear_type #>      Odd-Even #> even      0.5 #> odd      -0.5 model_contrasts <-   mtcars |>   dplyr::mutate(gear_type = ifelse(gear %% 2 == 0, \"even\", \"odd\")) |>   enlist_contrasts(gear_type ~ scaled_sum_code + \"odd\" | c(\"Odd-Even\"),                    carb + cyl ~ sum_code) #> Converting to factors: gear_type carb cyl  model_contrasts #> $gear_type #>      Odd-Even #> even      0.5 #> odd      -0.5 #>  #> $carb #>    2  3  4  6  8 #> 1 -1 -1 -1 -1 -1 #> 2  1  0  0  0  0 #> 3  0  1  0  0  0 #> 4  0  0  1  0  0 #> 6  0  0  0  1  0 #> 8  0  0  0  0  1 #>  #> $cyl #>    6  8 #> 4 -1 -1 #> 6  1  0 #> 8  0  1 carb_contrasts <- scaled_sum_code(6)  enlist_contrasts(mtcars,                  cyl ~ sum_code,                  carb ~ carb_contrasts) #> Converting to factors: cyl carb #> $cyl #>    6  8 #> 4 -1 -1 #> 6  1  0 #> 8  0  1 #>  #> $carb #>            2          3          4          6          8 #> 1 -0.1666667 -0.1666667 -0.1666667 -0.1666667 -0.1666667 #> 2  0.8333333 -0.1666667 -0.1666667 -0.1666667 -0.1666667 #> 3 -0.1666667  0.8333333 -0.1666667 -0.1666667 -0.1666667 #> 4 -0.1666667 -0.1666667  0.8333333 -0.1666667 -0.1666667 #> 6 -0.1666667 -0.1666667 -0.1666667  0.8333333 -0.1666667 #> 8 -0.1666667 -0.1666667 -0.1666667 -0.1666667  0.8333333 contr.sum(3) # third row = reference level #>   [,1] [,2] #> 1    1    0 #> 2    0    1 #> 3   -1   -1  enlist_contrasts(mtcars, cyl ~ contr.sum) # == sum_code #> Converting to factors: cyl #> $cyl #>    6  8 #> 4 -1 -1 #> 6  1  0 #> 8  0  1 enlist_contrasts(mtcars, cyl ~ I(contr.sum)) # == sum_code #> Converting to factors: cyl #> Warning in .postprocess_matrix(new_contrasts, code_by, reference_level, : No #> comparison labels set and as_is=TRUE, contrast labels will be column indices. #> $cyl #>    1  2 #> 1  1  0 #> 2  0  1 #> 3 -1 -1"},{"path":"https://tsostarics.github.io/contrastable/articles/contrastable.html","id":"glimpse_contrasts","dir":"Articles","previous_headings":"","what":"glimpse_contrasts","title":"contrastable","text":"Used summarize information contrast schemes used. Note usually used 2-step process, needs information contrast specifications expects contrasts set dataframe provided. example, try glimpse contrasts mtcars directly, ’ll warned dataframe columns aren’t actually set specified formulas, along code snippet fix . can copy-paste directly try : observation don’t use set_contrasts() dataset used statistical model, results won’t match information table glimpse_contrasts(). However, also requires changing formulas 2 places need make changes. can make 1 list contrast formulas pass around different functions like :","code":"mtcars2 <-    dplyr::mutate(mtcars, gear_type = ifelse(gear %% 2 == 0, \"even\", \"odd\"))  glimpse_contrasts(mtcars2,                   gear_type ~ scaled_sum_code + \"odd\" | c(\"Odd-Even\"),                   carb + cyl ~ sum_code) #> Warning: These vars in `mtcars2` are not factors: #>  - gear_type #>  - carb #>  - cyl #> To fix, be sure to run: #> mtcars2 <- set_contrasts(mtcars2,  #>                          gear_type ~ scaled_sum_code + \"odd\" | c(\"Odd-Even\"), #>                          carb + cyl ~ sum_code) #>      factor n  level_names          scheme reference  intercept #> 1 gear_type 2    even, odd scaled_sum_code       odd grand mean #> 2      carb 6 1, 2, 3,....        sum_code      <NA> grand mean #> 3       cyl 3      4, 6, 8        sum_code      <NA> grand mean mtcars2 <- set_contrasts(mtcars2,                           gear_type ~ scaled_sum_code + \"odd\" | c(\"Odd-Even\"),                          carb + cyl ~ sum_code)  #> Converting to factors: gear_type carb cyl  glimpse_contrasts(mtcars2,                   gear_type ~ scaled_sum_code + \"odd\" | c(\"Odd-Even\"),                   carb + cyl ~ sum_code) #>      factor n  level_names          scheme reference  intercept #> 1 gear_type 2    even, odd scaled_sum_code       odd grand mean #> 2      carb 6 1, 2, 3,....        sum_code      <NA> grand mean #> 3       cyl 3      4, 6, 8        sum_code      <NA> grand mean my_contrasts <- list(gear_type ~ scaled_sum_code + \"odd\" | c(\"Odd-Even\"),                      carb + cyl ~ sum_code)  mtcars2 <-    mtcars |>    dplyr::mutate(gear_type = ifelse(gear %% 2 == 0, \"even\", \"odd\")) |>    set_contrasts(my_contrasts) #> Converting to factors: gear_type carb cyl  glimpse_contrasts(mtcars2, my_contrasts) #>      factor n  level_names          scheme reference  intercept #> 1 gear_type 2    even, odd scaled_sum_code       odd grand mean #> 2      carb 6 1, 2, 3,....        sum_code      <NA> grand mean #> 3       cyl 3      4, 6, 8        sum_code      <NA> grand mean"},{"path":"https://tsostarics.github.io/contrastable/articles/contrastable.html","id":"decompose_contrasts","dir":"Articles","previous_headings":"glimpse_contrasts","what":"decompose_contrasts","title":"contrastable","text":"Use function extract contrasts one column separate columns– one comparison. function particularly helpful pedagogical uses show students contrasts represented model’s perspective. see ’ve added 3 new columns decomposing gear_type cyl columns respective comparisons.","code":"mtcars2 |>    decompose_contrasts(~gear_type + cyl) |>    head() #>                    mpg cyl disp  hp drat    wt  qsec vs am gear carb gear_type #> Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4      even #> Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4      even #> Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1      even #> Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1       odd #> Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2       odd #> Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1       odd #>                   gear_typeOdd-Even cyl6 cyl8 #> Mazda RX4                       0.5    1    0 #> Mazda RX4 Wag                   0.5    1    0 #> Datsun 710                      0.5   -1   -1 #> Hornet 4 Drive                 -0.5    1    0 #> Hornet Sportabout              -0.5    0    1 #> Valiant                        -0.5    1    0"},{"path":"https://tsostarics.github.io/contrastable/articles/contrastable.html","id":"contrast-functions","dir":"Articles","previous_headings":"","what":"Contrast functions","title":"contrastable","text":"listing different contrast coding functions provided package. use contrast_scheme part formulas. intercept described default case, can changed described using * operator. treatment_code(): Pairwise comparisons reference level, intercept equals mean reference level. scaled_sum_code(): Pairwise comparisons reference level, intercept equals grand mean sum_code(): Pairwise comparisons grand mean levels except reference level, intercept equals grand mean. backwards_difference_code(): Subtract adjacent levels. levels , B, C, D (order), returns differences B-, C-B, D-C. Intercept equals grand mean. forwards_difference_code(): Subtract adjacent levels. levels , B, C, D (order), returns differences -B, B-C, C-D. Intercept equals grand mean. helmert_code(): Nested comparisons starting first level. Intercept equals grand mean. reverse_helmert_code(): Nested comparisons starting last level. Intercept equals grand mean. cumulative_split_code(): Cumulative grouping levels. levels , B, C, D (order), returns -(B+C+D), (+B)-(C+D), (+B+C)-D. Intercept equals grand mean. polynomial_code(): Orthogonal polynomial coding, intercept equals grand mean. raw_polynomial_code(): Raw polynomial coding, intercept equals grand mean. can use function returns contrast matrices. functions stats MASS packages can used. stats::contr.treatment(): Equivalent treatment coding (treatment_code()) stats::contr.SAS(): Equivalent treatment coding, uses last level reference level default. Note difference neutralized due package always setting first level reference level. stats::contr.poly: Equivalent polynomial coding (polynomial_code()) MASS::contr.sdif: Equivalent backwards difference coding (backwards_difference_code()) stats::contr.sum: Equivalent sum coding (sum_code()) stats::contr.helmert: Provides nested comparisons like helmert coding (helmert_code()), matrix scaled. means effect estimates scaling factor dependent number levels. reflected default comparison labels package provides. See . See vignette(\"contrasts\") information.","code":"enlist_contrasts(mtcars, carb ~ contr.helmert) #> Converting to factors: carb #> $carb #>   (<2)/2 (<3)/3 (<4)/4 (<6)/5 (<8)/6 #> 1     -1     -1     -1     -1     -1 #> 2      1     -1     -1     -1     -1 #> 3      0      2     -1     -1     -1 #> 4      0      0      3     -1     -1 #> 6      0      0      0      4     -1 #> 8      0      0      0      0      5 enlist_contrasts(mtcars, carb ~ helmert_code()) #> Converting to factors: carb #> $carb #>   <2   <3   <4   <6   <8   #> 1 -1/2 -1/3 -1/4 -1/5 -1/6 #> 2  1/2 -1/3 -1/4 -1/5 -1/6 #> 3    0  2/3 -1/4 -1/5 -1/6 #> 4    0    0  3/4 -1/5 -1/6 #> 6    0    0    0  4/5 -1/6 #> 8    0    0    0    0  5/6"},{"path":"https://tsostarics.github.io/contrastable/articles/contrasts.html","id":"introduction-to-contrasts","dir":"Articles","previous_headings":"","what":"Introduction to contrasts","title":"Contrastable Overview","text":"Statistical models linear regression need numbers operate , often discrete categories want model ethnicity, country, treatment group, etc. Typically, comparisons mind statistics: compare group receiving treatment reference level , something like compare group group B. Contrast coding process assigning numbers encode comparisons want make prior fitting statistical model. allows us strategically set model interpretable way ’s meaningful us even though fit statistical model unchanged. , contrast coding important inferential statistics reporting coefficients correctly, important group-level predictions. Throughout vignette package, refer different contrast schemes, define encoding principled set comparisons arbitrary number factor levels. important bit arbitrary number part. start example, consider experiment people tasked keeping track location different shapes different levels cognitive load, needing remember different strings numbers. Basically, change detection task digit span cognitive load manipulation. ’ll call levels cognitive load factor none, low, high. priori, speed people detect shape changes location vary depending cognitive load. Specifically, reaction time (RT) slower cognitive load higher. kinds comparisons make, encode statistical model? One comparison might compare low none, high none. Another compare low none, high low. Yet another compare low none, high low none together. , compare level average across conditions.1 Specifying different comparisons, really just amount differences group means, goal . example, went found high cognitive load condition wasn’t high enough? needed add extra-high level? add comparison extra-high none, compare extra-high high. , compare extra-high none plus low plus high together. Ideally, ’re going pairwise comparisons reference level, successive differences levels, kind nested set comparisons, want able specify consistently without needing revisit every instance specifying comparisons just accommodate new level. Throughout vignette package, refer different contrast schemes, define encoding principled set comparisons arbitrary number factor levels. important bit arbitrary number part goal take pairwise comparisons reference level, adding new level amount encoding additional pairwise comparison reference level. ’ll contrast approach manual approach contrast coding, explicitly write , code, every single comparison every single factor want make. Consider added new three-level predictor crossed four level example (’ll call new predictor group levels , B, C). also just wanted pairwise comparisons, scheme approach encode pairwise comparisons cognitive load pairwise comparisons new factor. manual approach say encode low-none, high-none, extra high-none; , encode B-, C-. introduce new group D later, remember go specify D-. , manual approach maximally explicit exactly want compare, ’s also things write chances make mistake implementing . Given contrasts specified using matrices R, chances mistake high. Accordingly, R provides functions implement common contrast schemes contr.treatment contr.sum, return matrices given number levels. However, ’s trickiness . quick list issues package attempts circumvent; ’re familiar contrast coding work, may sound familiar may surprise . setting contrasts factor differ R session’s default contrasts, labels comparisons output statistical model reset. requires researcher keep track numeric indices (1, 2, etc.) correspond comparisons—also requires keeping track alphabetical order levels. Alternatively, researcher can set comparison labels using dim(), dimnames(), colnames(). experience, rarely see people field , believe naive expect people suddenly (learn ) start . default contrast scheme, contr.treatment, places reference level first level alphabetically contr.sum places reference level LAST level alphabetically. verify , try running contr.treatment(5) contr.sum(5). respectively, reference levels identifiable rows containing either 0s -1s. Related , people want use ±.5\\pm.5 contrasts two-level factor, uncommon see something like -contr.sum(2)/2. However, generalize number levels greater 2, .e,. -contr.sum(3)/2 give expect. contr.helmert returns unscaled matrices, giving effect estimates need manually scaled. Tests statistical significance still meaningful, interpreting magnitude effects using matrices function likely incorrect scaled manually. Quite contrasts simplify ±.5\\pm.5 two levels. example, helmert coding backward difference coding give +.5 -.5. , add third level , values newly added comparison . Accordingly, ’re explicit goal comparisons (nested comparisons vs successive comparisons) future researchers following work might attempt use contrast scheme understand new comparison .","code":""},{"path":"https://tsostarics.github.io/contrastable/articles/contrasts.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Contrastable Overview","text":"’m going use mtcars dataset just something work . ’ll convert bunch columns factors front. can inspect contrasts factors using contrasts(), use default contrasts unordered factors can see levels carb reflected coefficient labels: changed contrasts helpful labels go away replaced numeric indices. Note level names originally also numbers, easy get mixed point.","code":"mdl_data <-    mtcars |>    as_tibble() |>    mutate(cyl = factor(cyl),           twolevel = factor(rep(c(\"a\", \"b\"), times = nrow(mtcars) / 2)),          gear = factor(gear),          carb = factor(carb)) options(\"contrasts\") # Show defaults for unordered and ordered #> $contrasts #>         unordered           ordered  #> \"contr.treatment\"      \"contr.poly\" contrasts(mdl_data$twolevel) #>   b #> a 0 #> b 1 contrasts(mdl_data$carb) # Note the reference level #>   2 3 4 6 8 #> 1 0 0 0 0 0 #> 2 1 0 0 0 0 #> 3 0 1 0 0 0 #> 4 0 0 1 0 0 #> 6 0 0 0 1 0 #> 8 0 0 0 0 1 summary(lm(mpg ~ carb, data = mdl_data)) #>  #> Call: #> lm(formula = mpg ~ carb, data = mdl_data) #>  #> Residuals: #>    Min     1Q Median     3Q    Max  #> -7.243 -3.325  0.000  2.360  8.557  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)   25.343      1.854  13.670 2.21e-13 *** #> carb2         -2.943      2.417  -1.218  0.23435     #> carb3         -9.043      3.385  -2.672  0.01285 *   #> carb4         -9.553      2.417  -3.952  0.00053 *** #> carb6         -5.643      5.243  -1.076  0.29174     #> carb8        -10.343      5.243  -1.973  0.05927 .   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 4.905 on 26 degrees of freedom #> Multiple R-squared:  0.4445, Adjusted R-squared:  0.3377  #> F-statistic: 4.161 on 5 and 26 DF,  p-value: 0.006546 mdl_data2 <- mdl_data contrasts(mdl_data2$carb) <- contr.sum(6)  contrasts(mdl_data2$carb) # Note the reference level #>   [,1] [,2] [,3] [,4] [,5] #> 1    1    0    0    0    0 #> 2    0    1    0    0    0 #> 3    0    0    1    0    0 #> 4    0    0    0    1    0 #> 6    0    0    0    0    1 #> 8   -1   -1   -1   -1   -1 summary(lm(mpg ~ carb, data = mdl_data2)) #>  #> Call: #> lm(formula = mpg ~ carb, data = mdl_data2) #>  #> Residuals: #>    Min     1Q Median     3Q    Max  #> -7.243 -3.325  0.000  2.360  8.557  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  19.0888     1.3373  14.274 8.18e-14 *** #> carb1         6.2540     2.0198   3.096  0.00465 **  #> carb2         3.3112     1.8418   1.798  0.08383 .   #> carb3        -2.7888     2.6710  -1.044  0.30605     #> carb4        -3.2988     1.8418  -1.791  0.08493 .   #> carb5         0.6112     4.2221   0.145  0.88602     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 4.905 on 26 degrees of freedom #> Multiple R-squared:  0.4445, Adjusted R-squared:  0.3377  #> F-statistic: 4.161 on 5 and 26 DF,  p-value: 0.006546"},{"path":"https://tsostarics.github.io/contrastable/articles/contrasts.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Contrastable Overview","text":"Now ’ll introduce main workhorse package: set_contrasts function. function features special syntax quickly set contrast schemes. ’ll introduce features one time. First, ’ll set carb use sum coding . using two-sided formulas, left hand side formula column dataset right hand side includes information contrasts want set. example, takes form varname ~ code_by. , specify want carb use contrasts generated sum_code function. Two things note: set_contrasts automatically coerce specified columns factors, don’t need worry calling factor() columns first. Note function also give messages factors haven’t set explicitly. Note , unlike last time, reference level now first level alphabetically labels retained (compare contrast matrices) schemes singular reference level, setting contrasts set_contrasts always set reference level first level alphabetically. Currently, reference level carb 1. want change reference level, use + operator formula. change formula looks like varname ~ code_by + reference. Let’s change 3: Note using sum coding, intercept mean group means: Let’s say, hypothetically, wanted get differences comparison level grand mean, also wanted intercept grand mean mean reference level? can set using * operator: varname ~ code_by + reference * intercept. Finally, let’s say wanted labels bit clear comparisons . can set label names using | operator: varname ~ code_by + reference * intercept | labels ’s look like tried manually . ’s highly unlikely correctly specify every single value every single label correctly first go (actually messed writing matrix). see can get even error prone, consider contrast matrix like one . Personally trust get matrix correct, ever add level design obscene try edit . work compound multiple factors, set_contrasts function can specify desired scheme easily: Practically speaking, common things ’ll setting contrast scheme maybe changing reference level, + operator important.","code":"mdl_data3 <- set_contrasts(mdl_data, carb ~ sum_code) #> Expect contr.treatment or contr.poly for unset factors: cyl gear twolevel  contrasts(mdl_data2$carb) # matrix from before #>   [,1] [,2] [,3] [,4] [,5] #> 1    1    0    0    0    0 #> 2    0    1    0    0    0 #> 3    0    0    1    0    0 #> 4    0    0    0    1    0 #> 6    0    0    0    0    1 #> 8   -1   -1   -1   -1   -1 contrasts(mdl_data3$carb) # new matrix, note the column names #>    2  3  4  6  8 #> 1 -1 -1 -1 -1 -1 #> 2  1  0  0  0  0 #> 3  0  1  0  0  0 #> 4  0  0  1  0  0 #> 6  0  0  0  1  0 #> 8  0  0  0  0  1 mdl_data4 <- set_contrasts(mdl_data, carb ~ sum_code + \"3\")   #> Expect contr.treatment or contr.poly for unset factors: cyl gear twolevel  contrasts(mdl_data4$carb) #>    1  2  4  6  8 #> 1  1  0  0  0  0 #> 2  0  1  0  0  0 #> 3 -1 -1 -1 -1 -1 #> 4  0  0  1  0  0 #> 6  0  0  0  1  0 #> 8  0  0  0  0  1 # mean of group means: group_means <- summarize(mdl_data4, grp_mean = mean(mpg), .by = \"carb\") group_means #> # A tibble: 6 × 2 #>   carb  grp_mean #>   <fct>    <dbl> #> 1 4         15.8 #> 2 1         25.3 #> 3 2         22.4 #> 4 3         16.3 #> 5 6         19.7 #> 6 8         15 mean(group_means$grp_mean) #> [1] 19.08881  # model coefficients coef(lm(mpg ~ carb, data = mdl_data4)) #> (Intercept)       carb1       carb2       carb4       carb6       carb8  #>  19.0888095   6.2540476   3.3111905  -3.2988095   0.6111905  -4.0888095 mdl_data5 <- set_contrasts(mdl_data, carb ~ sum_code + 3 * 3) #> Expect contr.treatment or contr.poly for unset factors: cyl gear twolevel  contrasts(mdl_data5$carb) #>   1 2 4 6 8 #> 1 2 1 1 1 1 #> 2 1 2 1 1 1 #> 3 0 0 0 0 0 #> 4 1 1 2 1 1 #> 6 1 1 1 2 1 #> 8 1 1 1 1 2 coef(lm(mpg ~ carb, data = mdl_data5)) #> (Intercept)       carb1       carb2       carb4       carb6       carb8  #>  16.3000000   6.2540476   3.3111905  -3.2988095   0.6111905  -4.0888095 mdl_data6 <- set_contrasts(mdl_data,                             carb ~ sum_code + 3 * 3 | c(\"1-3\",                                                        \"2-3\",                                                        \"4-3\",                                                        \"6-3\",                                                        \"8-3\")) #> Expect contr.treatment or contr.poly for unset factors: cyl gear twolevel  contrasts(mdl_data5$carb) #>   1 2 4 6 8 #> 1 2 1 1 1 1 #> 2 1 2 1 1 1 #> 3 0 0 0 0 0 #> 4 1 1 2 1 1 #> 6 1 1 1 2 1 #> 8 1 1 1 1 2 coef(lm(mpg ~ carb, data = mdl_data6)) #> (Intercept)     carb1-3     carb2-3     carb4-3     carb6-3     carb8-3  #>  16.3000000   6.2540476   3.3111905  -3.2988095   0.6111905  -4.0888095 mdl_data7 <- mdl_data  my_contrasts <- matrix(c(2, 1, 0, 1, 1, 1,                           1, 2, 0, 1, 1, 1,                           1, 1, 0, 2, 1, 1,                           1, 1, 0, 1, 2, 1,                          1, 1, 0, 1, 1, 2),                        nrow = 6) dimnames(my_contrasts) <-    list(     c(\"1\", \"2\", \"3\", \"4\", \"6\", \"8\"),      c(\"1-3\", \"2-3\", \"4-3\", \"6-3\", \"8-3\")   )   contrasts(mdl_data7$carb) <- my_contrasts contrasts(mdl_data7$carb) #>   1-3 2-3 4-3 6-3 8-3 #> 1   2   1   1   1   1 #> 2   1   2   1   1   1 #> 3   0   0   0   0   0 #> 4   1   1   2   1   1 #> 6   1   1   1   2   1 #> 8   1   1   1   1   2 mdl_data8 <- set_contrasts(mdl_data, carb ~ helmert_code * 4) #> Expect contr.treatment or contr.poly for unset factors: cyl gear twolevel  MASS::fractions(contrasts(mdl_data8$carb)) #>   <2   <3   <4   <6   <8   #> 1 -1/2 -1/3   -1    0    0 #> 2  1/2 -1/3   -1    0    0 #> 3    0  2/3   -1    0    0 #> 4    0    0    0    0    0 #> 6    0    0 -3/4    1    0 #> 8    0    0 -3/4  1/5    1 mdl_data9 <- set_contrasts(mdl_data,                            carb ~ helmert_code * 4,                            cyl ~ scaled_sum_code + 4,                            twolevel ~ scaled_sum_code + \"a\",                            gear ~ helmert_code)  MASS::fractions(contrasts(mdl_data9$carb)) #>   <2   <3   <4   <6   <8   #> 1 -1/2 -1/3   -1    0    0 #> 2  1/2 -1/3   -1    0    0 #> 3    0  2/3   -1    0    0 #> 4    0    0    0    0    0 #> 6    0    0 -3/4    1    0 #> 8    0    0 -3/4  1/5    1 MASS::fractions(contrasts(mdl_data9$cyl)) #>   6    8    #> 4 -1/3 -1/3 #> 6  2/3 -1/3 #> 8 -1/3  2/3 MASS::fractions(contrasts(mdl_data9$twolevel)) #>   b    #> a -1/2 #> b  1/2 MASS::fractions(contrasts(mdl_data9$gear)) #>   <4   <5   #> 3 -1/2 -1/3 #> 4  1/2 -1/3 #> 5    0  2/3"},{"path":"https://tsostarics.github.io/contrastable/articles/contrasts.html","id":"enlist_contrasts","dir":"Articles","previous_headings":"Usage","what":"enlist_contrasts","title":"Contrastable Overview","text":"related function enlist_contrasts function, follows exact rules set_contrasts return list contrasts instead setting contrasts data . Henceforth, ’m going use dataframe example, ’ll just use show contrast matrices.","code":"enlist_contrasts(mdl_data,                  carb ~ helmert_code * 4,                  cyl ~ scaled_sum_code + 4) #> Expect contr.treatment or contr.poly for unset factors: gear twolevel #> $carb #>     <2            <3    <4  <6 <8 #> 1 -0.5 -3.333333e-01 -1.00 0.0  0 #> 2  0.5 -3.333333e-01 -1.00 0.0  0 #> 3  0.0  6.666667e-01 -1.00 0.0  0 #> 4  0.0  0.000000e+00  0.00 0.0  0 #> 6  0.0  5.551115e-17 -0.75 1.0  0 #> 8  0.0  3.700743e-17 -0.75 0.2  1 #>  #> $cyl #>            6          8 #> 4 -0.3333333 -0.3333333 #> 6  0.6666667 -0.3333333 #> 8 -0.3333333  0.6666667"},{"path":"https://tsostarics.github.io/contrastable/articles/contrasts.html","id":"contrast-functions","dir":"Articles","previous_headings":"Usage","what":"Contrast functions","title":"Contrastable Overview","text":"showed functions generate contrasts like sum_code scaled_sum_code helmert_code. list functions provided package: treatment_code: Pairwise comparisons reference level, intercept equals reference level (equivalent contr.treatment) sum_code: Comparisons grand mean, intercept grand mean (equivalent contr.sum, reference level first level) scaled_sum_code: Pairwise comparisons reference level, intercept equals grand mean helmert_code: Nested comparisons starting first level. Note equivalent contr.helmert, latter gives unscaled matrix. reverse_helmert_code: Nested comparisons starting last level. backward_difference_code: Successive differences. levels , B, C, gives differences B-C-B forward_difference_code: Successive differences. levels , B, C, gives differences -B B-C. cumulative_split_code: Dichotomous differences. levels , B, C, D, gives differences -(B+C+D), (+B)-(C+D), (+B+C)-D. orth_polynomial_code: Orthogonal polynomial coding, equivalent contr.poly. raw_polynomial_code: Raw polynomial coding, recommend using unless know ’re getting . polynomial_code: alias orthogonal_polynomial_code can also use contrast functions package long first argument number levels used generate matrix. However, , ’s singular level used reference level, always set first level regardless original matrix . want suppress behavior, can use wrapper base R. Note also result setting labels : use generated matrix -. useful explicitly create matrix want make sure reference level isn’t shifted around. One last quick note can keep parentheses function, tab-autocomplete puts parentheses don’t worry . However, function need exist; following won’t run:","code":"# all equivalent to carb ~ sum_code foo <- sum_code enlist_contrasts(mdl_data, carb ~ contr.sum) #> Expect contr.treatment or contr.poly for unset factors: cyl gear twolevel #> $carb #>    2  3  4  6  8 #> 1 -1 -1 -1 -1 -1 #> 2  1  0  0  0  0 #> 3  0  1  0  0  0 #> 4  0  0  1  0  0 #> 6  0  0  0  1  0 #> 8  0  0  0  0  1 enlist_contrasts(mdl_data, carb ~ sum_code) #> Expect contr.treatment or contr.poly for unset factors: cyl gear twolevel #> $carb #>    2  3  4  6  8 #> 1 -1 -1 -1 -1 -1 #> 2  1  0  0  0  0 #> 3  0  1  0  0  0 #> 4  0  0  1  0  0 #> 6  0  0  0  1  0 #> 8  0  0  0  0  1 enlist_contrasts(mdl_data, carb ~ foo) #> Expect contr.treatment or contr.poly for unset factors: cyl gear twolevel #> $carb #>    2  3  4  6  8 #> 1 -1 -1 -1 -1 -1 #> 2  1  0  0  0  0 #> 3  0  1  0  0  0 #> 4  0  0  1  0  0 #> 6  0  0  0  1  0 #> 8  0  0  0  0  1 enlist_contrasts(mdl_data, carb ~ I(contr.sum)) #> Expect contr.treatment or contr.poly for unset factors: cyl gear twolevel #> Warning in .postprocess_matrix(new_contrasts, code_by, reference_level, : No #> comparison labels set and as_is=TRUE, contrast labels will be column indices. #> $carb #>    1  2  3  4  5 #> 1  1  0  0  0  0 #> 2  0  1  0  0  0 #> 3  0  0  1  0  0 #> 4  0  0  0  1  0 #> 5  0  0  0  0  1 #> 6 -1 -1 -1 -1 -1 enlist_contrasts(mdl_data, carb ~ contr.sum()) #> Expect contr.treatment or contr.poly for unset factors: cyl gear twolevel #> $carb #>    2  3  4  6  8 #> 1 -1 -1 -1 -1 -1 #> 2  1  0  0  0  0 #> 3  0  1  0  0  0 #> 4  0  0  1  0  0 #> 6  0  0  0  1  0 #> 8  0  0  0  0  1 foo <- contr.sum(6) # foo is a matrix enlist_contrasts(mdl_data, carb ~ foo()) # foo is not a function"},{"path":"https://tsostarics.github.io/contrastable/articles/contrasts.html","id":"tidyselect-functions","dir":"Articles","previous_headings":"Usage","what":"tidyselect functions","title":"Contrastable Overview","text":"know ’re going use scheme multiple variables, don’t need set reference level labels one particular, can use tidyselect functionality set multiple contrasts. ’ll show examples . First, can specify multiple variables left hand side using + operator. can also use selecting functions like : also lets programmatically set contrasts like : However, ensure variables duplicated. following allowed regardless whether right right hand sides evaluate contrast schemes. can check tidyselect package information. .unordered provided package analogue .ordered.","code":"# equivalent to: enlist_contrasts(mdl_data, cyl ~ sum_code, gear ~ sum_code) enlist_contrasts(mdl_data, cyl + gear ~ sum_code) #> Expect contr.treatment or contr.poly for unset factors: carb twolevel #> $cyl #>    6  8 #> 4 -1 -1 #> 6  1  0 #> 8  0  1 #>  #> $gear #>    4  5 #> 3 -1 -1 #> 4  1  0 #> 5  0  1 enlist_contrasts(mdl_data, where(is.factor) ~ sum_code) #> $cyl #>    6  8 #> 4 -1 -1 #> 6  1  0 #> 8  0  1 #>  #> $gear #>    4  5 #> 3 -1 -1 #> 4  1  0 #> 5  0  1 #>  #> $carb #>    2  3  4  6  8 #> 1 -1 -1 -1 -1 -1 #> 2  1  0  0  0  0 #> 3  0  1  0  0  0 #> 4  0  0  1  0  0 #> 6  0  0  0  1  0 #> 8  0  0  0  0  1 #>  #> $twolevel #>    b #> a -1 #> b  1 # see also enlist_contrasts(mdl_data, where(is.unordered) ~ sum_code) # see also enlist_contrasts(mdl_data, where(is.numeric) ~ sum_code) these_vars <- c(\"cyl\", \"gear\") enlist_contrasts(mdl_data, all_of(these_vars) ~ sum_code) #> Expect contr.treatment or contr.poly for unset factors: carb twolevel #> $cyl #>    6  8 #> 4 -1 -1 #> 6  1  0 #> 8  0  1 #>  #> $gear #>    4  5 #> 3 -1 -1 #> 4  1  0 #> 5  0  1 enlist_contrasts(mdl_data,                   cyl ~ sum_code,                   where(is.factor) ~ sum_code) # cyl is a factor for mdl_data  enlist_contrasts(mdl_data,                   cyl ~ sum_code,                   cyl + gear ~ sum_code) # cyl can't be specified twice"},{"path":"https://tsostarics.github.io/contrastable/articles/contrasts.html","id":"other-ways-to-set-contrasts","dir":"Articles","previous_headings":"Usage","what":"Other ways to set contrasts","title":"Contrastable Overview","text":"can also set contrasts using things function. Specifically, can pass following classes code_by two-sided formulas: array matrix hypr function (must return contrast matrix, anonymous function) symbol (must evaluate contrast matrix though) ’re using custom matrix tricky analysis, can specify matrix pass set_contrasts: can also specify list formulas pass different functions. functionality important next function ’ll discuss.","code":"my_matrix <- contr.sum(6) / 2 enlist_contrasts(mdl_data, carb ~ my_matrix) #> Expect contr.treatment or contr.poly for unset factors: cyl gear twolevel #> $carb #>      2    3    4    6    8 #> 1 -0.5 -0.5 -0.5 -0.5 -0.5 #> 2  0.5  0.0  0.0  0.0  0.0 #> 3  0.0  0.5  0.0  0.0  0.0 #> 4  0.0  0.0  0.5  0.0  0.0 #> 6  0.0  0.0  0.0  0.5  0.0 #> 8  0.0  0.0  0.0  0.0  0.5 my_contrasts <- list(carb ~ contr.sum, gear ~ scaled_sum_code)  enlist_contrasts(mdl_data, my_contrasts) #> Expect contr.treatment or contr.poly for unset factors: cyl twolevel #> $carb #>    2  3  4  6  8 #> 1 -1 -1 -1 -1 -1 #> 2  1  0  0  0  0 #> 3  0  1  0  0  0 #> 4  0  0  1  0  0 #> 6  0  0  0  1  0 #> 8  0  0  0  0  1 #>  #> $gear #>            4          5 #> 3 -0.3333333 -0.3333333 #> 4  0.6666667 -0.3333333 #> 5 -0.3333333  0.6666667 mdl_data12 <- set_contrasts(mdl_data, my_contrasts) #> Expect contr.treatment or contr.poly for unset factors: cyl twolevel"},{"path":"https://tsostarics.github.io/contrastable/articles/contrasts.html","id":"glimpse_contrasts","dir":"Articles","previous_headings":"Usage","what":"glimpse_contrasts","title":"Contrastable Overview","text":"can useful get summary different factors contrasts dataset. glimpse_contrasts function passing dataset contrasts. Note haven’t actually set contrasts dataset, ’ll receive series warnings: can also specify formulas directly, like set_contrasts enlist_contrasts— usually ’ll want list formulas pass different functions. Note retyped everything typed just get summary table. don’t provide contrast information, glimpse_contrasts assume factors using default contrasts. contrasts defaults, ’ll receive warnings: mismatches data contrasts specified formulas, ’ll also get warnings: Remember set_contrasts automatically coerce dataframe columns factors specifying contrast, glimpse_contrasts modify provided dataframe.","code":"my_contrasts <- list(carb ~ contr.sum,                      gear ~ treatment_code + 4,                      twolevel ~ scaled_sum_code * \"b\",                      cyl ~ helmert_code) mdl_data$twolevel #>  [1] a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b a b #> Levels: a b  enlist_contrasts(mdl_data, cyl ~ scaled_sum_code + 6 * 6) #> Expect contr.treatment or contr.poly for unset factors: gear carb twolevel #> $cyl #>   4 8 #> 4 1 0 #> 6 0 0 #> 8 0 1  mdl_data13 <- set_contrasts(mdl_data, my_contrasts)  glimpse_contrasts(mdl_data13, my_contrasts) #>     factor n  level_names          scheme reference  intercept #> 1     carb 6 1, 2, 3,....       contr.sum      <NA> grand mean #> 2     gear 3      3, 4, 5  treatment_code         4    mean(4) #> 3 twolevel 2         a, b scaled_sum_code      <NA>    mean(b) #> 4      cyl 3      4, 6, 8    helmert_code      <NA> grand mean glimpse_contrasts(mdl_data, my_contrasts) #> Warning: Contrasts for these factors in `mdl_data` don't match formulas: #>  - carb #>  - gear #>  - twolevel #>  - cyl #> To fix, be sure to run: #> mdl_data <- set_contrasts(mdl_data, my_contrasts) #>     factor n  level_names          scheme reference  intercept #> 1     carb 6 1, 2, 3,....       contr.sum      <NA> grand mean #> 2     gear 3      3, 4, 5  treatment_code         4    mean(4) #> 3 twolevel 2         a, b scaled_sum_code      <NA>    mean(b) #> 4      cyl 3      4, 6, 8    helmert_code      <NA> grand mean glimpse_contrasts(mdl_data13,                    carb ~ contr.sum,                   gear ~ treatment_code + 4,                   twolevel ~ scaled_sum_code * \"b\",                   cyl ~ helmert_code) #>     factor n  level_names          scheme reference  intercept #> 1     carb 6 1, 2, 3,....       contr.sum      <NA> grand mean #> 2     gear 3      3, 4, 5  treatment_code         4    mean(4) #> 3 twolevel 2         a, b scaled_sum_code      <NA>    mean(b) #> 4      cyl 3      4, 6, 8    helmert_code      <NA> grand mean glimpse_contrasts(mdl_data)  # no warnings #>            factor n  level_names          scheme reference intercept orthogonal #> cyl           cyl 3      4, 6, 8 contr.treatment         4   mean(4)         NA #> gear         gear 3      3, 4, 5 contr.treatment         3   mean(3)         NA #> carb         carb 6 1, 2, 3,.... contr.treatment         1   mean(1)         NA #> twolevel twolevel 2         a, b contr.treatment         a   mean(a)         NA #>          centered dropped_trends explicitly_set #> cyl            NA             NA          FALSE #> gear           NA             NA          FALSE #> carb           NA             NA          FALSE #> twolevel       NA             NA          FALSE glimpse_contrasts(mdl_data13) # warnings #> Warning in .warn_if_nondefault(default_contrasts, unset_factors, factor_sizes, : Unset factors do not use default contr.treatment or contr.poly. Glimpse table may be unreliable. #>  - cyl #>  - gear #>  - carb #>  - twolevel #>            factor n  level_names scheme reference  intercept orthogonal #> cyl           cyl 3      4, 6, 8    ???      <NA> grand mean         NA #> gear         gear 3      3, 4, 5    ???         4    mean(4)         NA #> carb         carb 6 1, 2, 3,....    ???         1 grand mean         NA #> twolevel twolevel 2         a, b    ???         a    mean(b)         NA #>          centered dropped_trends explicitly_set #> cyl            NA             NA          FALSE #> gear           NA             NA          FALSE #> carb           NA             NA          FALSE #> twolevel       NA             NA          FALSE glimpse_contrasts(mdl_data,                    carb ~ contr.sum,                    gear ~ treatment_code * 4,                   cyl ~ contr.treatment | c(\"diff1\", \"diff2\")) #> Warning: Contrasts for these factors in `mdl_data` don't match formulas: #>  - carb #>  - gear #> Comparison labels for contrasts in `mdl_data` don't match: #>  - cyl   (expected `diff1, diff2` but found `6, 8`) #> To fix, be sure to run: #> mdl_data <- set_contrasts(mdl_data,  #>                           carb ~ contr.sum, #>                           gear ~ treatment_code * 4, #>                           cyl ~ contr.treatment | c(\"diff1\", \"diff2\")) #>     factor n  level_names          scheme reference  intercept #> 1     carb 6 1, 2, 3,....       contr.sum      <NA> grand mean #> 2     gear 3      3, 4, 5  treatment_code      <NA>    mean(4) #> 3      cyl 3      4, 6, 8 contr.treatment      <NA>    mean(4) #> 4 twolevel 2         a, b contr.treatment         a    mean(a)"},{"path":"https://tsostarics.github.io/contrastable/articles/contrasts.html","id":"note-on-polynomial-contrasts","dir":"Articles","previous_headings":"Usage","what":"Note on polynomial contrasts","title":"Contrastable Overview","text":"additional operator formulas applies polynomial contrasts. background, polynomial contrasts encode polynomial “trends” across levels factor. , testing linear-like trend, quadratic-like trend, etc. One thing can , though don’t necessarily recommend removing higher-order trends. instance, 8 levels don’t want bother polynomials degree 3 (even though ’ll get degree 7 “free”). situation can use - operator: varname ~ code_by + reference * intercept - low:high | labels Note can use enlist_contrasts glimpse_contrasts. remove columns contrast matrix, R fill back something else. values correspond ? check hypothesis matrix, can see seems like ’s trying encode 0 floating point error: don’t recommend actually using - operator. use something like lm fit functions, can use output enlist_contrasts argument contrasts. Although, ’m pretty sure model matrix just add values anyways. try use - operator set_contrasts ’ll get warning, - operator ignored:","code":"enlist_contrasts(mdl_data, carb ~ contr.poly) #> Expect contr.treatment or contr.poly for unset factors: cyl gear twolevel #> $carb #>           .L         .Q         .C         ^4          ^5 #> 1 -0.5976143  0.5455447 -0.3726780  0.1889822 -0.06299408 #> 2 -0.3585686 -0.1091089  0.5217492 -0.5669467  0.31497039 #> 3 -0.1195229 -0.4364358  0.2981424  0.3779645 -0.62994079 #> 4  0.1195229 -0.4364358 -0.2981424  0.3779645  0.62994079 #> 6  0.3585686 -0.1091089 -0.5217492 -0.5669467 -0.31497039 #> 8  0.5976143  0.5455447  0.3726780  0.1889822  0.06299408 enlist_contrasts(mdl_data, carb ~ contr.poly - 3:5) #> Expect contr.treatment or contr.poly for unset factors: cyl gear twolevel #> $carb #>           .L         .Q #> 1 -0.5976143  0.5455447 #> 2 -0.3585686 -0.1091089 #> 3 -0.1195229 -0.4364358 #> 4  0.1195229 -0.4364358 #> 6  0.3585686 -0.1091089 #> 8  0.5976143  0.5455447 mdl_data14 <- set_contrasts(mdl_data, carb ~ contr.sum) #> Expect contr.treatment or contr.poly for unset factors: cyl gear twolevel contrasts(mdl_data14$carb) #>    2  3  4  6  8 #> 1 -1 -1 -1 -1 -1 #> 2  1  0  0  0  0 #> 3  0  1  0  0  0 #> 4  0  0  1  0  0 #> 6  0  0  0  1  0 #> 8  0  0  0  0  1 contrasts(mdl_data14$carb) <- contrasts(mdl_data14$carb)[, 1:2] contrasts(mdl_data14$carb) #>    2  3                                     #> 1 -1 -1 -0.23570226 -0.23570226 -0.23570226 #> 2  1  0 -0.23570226 -0.23570226 -0.23570226 #> 3  0  1 -0.23570226 -0.23570226 -0.23570226 #> 4  0  0  0.90236893 -0.09763107 -0.09763107 #> 6  0  0 -0.09763107  0.90236893 -0.09763107 #> 8  0  0 -0.09763107 -0.09763107  0.90236893 MASS::fractions(   contrastable:::.convert_matrix(     contrasts(mdl_data14$carb)   ) ) #>                     2                 3                                   #> 1               1/6              -1/3              -1/3  -1293633/5488420 #> 2               1/6               2/3              -1/3  -1293633/5488420 #> 3               1/6              -1/3               2/3  -1293633/5488420 #> 4               1/6                 0                 0 11956585/13250218 #> 6               1/6                 0                 0 -1293633/13250218 #> 8               1/6                 0                 0 -1293633/13250218 #>                                       #> 1  -1293633/5488420  -1293633/5488420 #> 2  -1293633/5488420  -1293633/5488420 #> 3  -1293633/5488420  -1293633/5488420 #> 4 -1293633/13250218 -1293633/13250218 #> 6 11956585/13250218 -1293633/13250218 #> 8 -1293633/13250218 11956585/13250218 mdl_data15 <- set_contrasts(mdl_data, carb ~ polynomial_code - 3:5) #> Expect contr.treatment or contr.poly for unset factors: cyl gear twolevel #> Warning: Cannot use `-` with set_contrasts, ignoring in carb ~ polynomial_code - 3:5. #>   Use enlist_contrasts instead."},{"path":"https://tsostarics.github.io/contrastable/articles/contrasts.html","id":"decompose_contrasts","dir":"Articles","previous_headings":"","what":"decompose_contrasts","title":"Contrastable Overview","text":"somewhat related - operator described , uses. considering factor 3 levels, ’ll end two coefficients model. words, single factor “decomposed” behind scenes multiple numeric predictors model matrix. Sometimes can helpful work directly decomposed predictors. example, interactions GAM models mgcv can often pain work , sometimes ’s easier just group interaction two predictors series individual predictors. However, matrix multiplication one time (trying conceptualize matrices fit together) can difficult, especially R’s model matrix functionality can us. decompose_contrasts provides interface decomposition. column names take name labels, may always easy work special characters. can wrangle use something like janitor package needed. ’s comparison using cyl predictor normally (gives us two coefficients), specifying comparisons separately decomposing contrasts: really wanted , use just one comparisons, note may give misleading results: function can especially valuable pedagogical purposes, shows qualitative labels factor data converted numeric values model work .","code":"mdl_data16 <-    mdl_data |>    set_contrasts(cyl ~ helmert_code,                 gear ~ helmert_code) |>    decompose_contrasts(~ cyl * gear)  #> Expect contr.treatment or contr.poly for unset factors: carb twolevel  # Look at the decomposed contrast columns mdl_data16 |>    dplyr::select(matches(\"^cyl|gear\")) |>    head() #>   cyl gear cyl<6      cyl<8 gear<4     gear<5 cyl<6:gear<4 cyl<8:gear<4 #> 1   6    4   0.5 -0.3333333    0.5 -0.3333333         0.25   -0.1666667 #> 2   6    4   0.5 -0.3333333    0.5 -0.3333333         0.25   -0.1666667 #> 3   4    4  -0.5 -0.3333333    0.5 -0.3333333        -0.25   -0.1666667 #> 4   6    3   0.5 -0.3333333   -0.5 -0.3333333        -0.25    0.1666667 #> 5   8    3   0.0  0.6666667   -0.5 -0.3333333         0.00   -0.3333333 #> 6   6    3   0.5 -0.3333333   -0.5 -0.3333333        -0.25    0.1666667 #>   cyl<6:gear<5 cyl<8:gear<5 #> 1   -0.1666667    0.1111111 #> 2   -0.1666667    0.1111111 #> 3    0.1666667    0.1111111 #> 4   -0.1666667    0.1111111 #> 5    0.0000000   -0.2222222 #> 6   -0.1666667    0.1111111 coef(lm(mpg ~ cyl, data = mdl_data16)) #> (Intercept)       cyl<6       cyl<8  #>   20.502165   -6.920779   -8.103247 coef(lm(mpg ~ `cyl<6` + `cyl<8`, data = mdl_data16)) #> (Intercept)     `cyl<6`     `cyl<8`  #>   20.502165   -6.920779   -8.103247 coef(lm(mpg ~ cyl * gear, data = mdl_data16)) #>  (Intercept)        cyl<6        cyl<8       gear<4       gear<5 cyl<6:gear<4  #>   19.7875000   -5.8083333   -8.5500000    0.7291667    1.9687500   -5.4250000  #> cyl<8:gear<4 cyl<6:gear<5 cyl<8:gear<5  #>   -5.9500000   -4.0375000           NA coef(lm(mpg ~            `cyl<6` + `cyl<8` +            `gear<4` + `gear<5` +            `cyl<6:gear<4` +            `cyl<8:gear<4` +            `cyl<6:gear<5` +           `cyl<8:gear<5`,          data = mdl_data16)) #>    (Intercept)        `cyl<6`        `cyl<8`       `gear<4`       `gear<5`  #>     19.7875000     -5.8083333     -8.5500000      0.7291667      1.9687500  #> `cyl<6:gear<4` `cyl<8:gear<4` `cyl<6:gear<5` `cyl<8:gear<5`  #>     -5.4250000     -5.9500000     -4.0375000             NA coef(lm(mpg ~ `cyl<6` + `cyl<8`, data = mdl_data16)) #> (Intercept)     `cyl<6`     `cyl<8`  #>   20.502165   -6.920779   -8.103247 coef(lm(mpg ~ `cyl<6`, data = mdl_data16)) # not the same estimate as the above #> (Intercept)     `cyl<6`  #>   19.556786   -8.541429"},{"path":"https://tsostarics.github.io/contrastable/articles/contrasts.html","id":"typical-patterns","dir":"Articles","previous_headings":"","what":"Typical patterns","title":"Contrastable Overview","text":"two general patterns ’ll take analyses package:","code":""},{"path":"https://tsostarics.github.io/contrastable/articles/contrasts.html","id":"pattern-1-no-glimpsing","dir":"Articles","previous_headings":"Typical patterns","what":"Pattern 1: No glimpsing","title":"Contrastable Overview","text":"’s general usage pattern don’t want use glimpse_contrasts.","code":"raw_data <- mtcars # load raw data from a csv or something here  # wrangle data for your final model final_data <-    mtcars |>    # mutate(# ... some data wrangling transformations ..) |>    set_contrasts(carb ~ sum_code) # set contrasts at the very end #> Converting to factors: carb  mdl <- lm(mpg ~ carb, data = final_data) # run model with contrasts set"},{"path":"https://tsostarics.github.io/contrastable/articles/contrasts.html","id":"pattern-2-with-information-about-contrasts","dir":"Articles","previous_headings":"Typical patterns","what":"Pattern 2: With information about contrasts","title":"Contrastable Overview","text":"’s usage pattern wanted , say, publish contrast matrices report glimpse table publication preregistration: want show fractions instead decimals, use MASS::fractions element list contrasts: use targets package, can set list contrasts target, pass targets analyses rerun whenever change contrasts (though shouldn’t happen frequently).","code":"raw_data <- mtcars # load raw data from a csv or something here  # specify contrasts up front my_contrasts <- list(carb ~ sum_code,                      cyl  ~ scaled_sum_code,                      gear ~ sum_code)  # wrangle data for your final model final_data <-    mtcars |>    # mutate(# ... some data wrangling transformations ..) |>    set_contrasts(my_contrasts) # set contrasts at the very end #> Converting to factors: carb cyl gear  # Show the matrices we're using enlist_contrasts(final_data, my_contrasts) #> $carb #>    2  3  4  6  8 #> 1 -1 -1 -1 -1 -1 #> 2  1  0  0  0  0 #> 3  0  1  0  0  0 #> 4  0  0  1  0  0 #> 6  0  0  0  1  0 #> 8  0  0  0  0  1 #>  #> $cyl #>            6          8 #> 4 -0.3333333 -0.3333333 #> 6  0.6666667 -0.3333333 #> 8 -0.3333333  0.6666667 #>  #> $gear #>    4  5 #> 3 -1 -1 #> 4  1  0 #> 5  0  1  # Show a summary glimpse_contrasts(final_data, my_contrasts) #>   factor n  level_names          scheme reference  intercept #> 1   carb 6 1, 2, 3,....        sum_code      <NA> grand mean #> 2    cyl 3      4, 6, 8 scaled_sum_code      <NA> grand mean #> 3   gear 3      3, 4, 5        sum_code      <NA> grand mean  # Fit the model with contrasts set mdl <- lm(mpg ~ carb, data = final_data) enlist_contrasts(final_data, my_contrasts) |>    lapply(MASS::fractions) #> $carb #>   2  3  4  6  8  #> 1 -1 -1 -1 -1 -1 #> 2  1  0  0  0  0 #> 3  0  1  0  0  0 #> 4  0  0  1  0  0 #> 6  0  0  0  1  0 #> 8  0  0  0  0  1 #>  #> $cyl #>   6    8    #> 4 -1/3 -1/3 #> 6  2/3 -1/3 #> 8 -1/3  2/3 #>  #> $gear #>   4  5  #> 3 -1 -1 #> 4  1  0 #> 5  0  1"},{"path":"https://tsostarics.github.io/contrastable/articles/contrasts.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Contrastable Overview","text":"discussed main functions package special syntax implemented set contrasts. want additional examples, see blog posts : Introduction Contrasts using Contrastable Helmert Coding need additional information regarding various warnings messages package throws, can check warnings vignette package.","code":""},{"path":"https://tsostarics.github.io/contrastable/articles/contrasts.html","id":"citation-examples","dir":"Articles","previous_headings":"","what":"Citation examples","title":"Contrastable Overview","text":"citing package paper, ideally three things achieved: Mention contrastable R package (Sostarics, 2024) Mention contrast scheme used variable reference levels appropriate Disambiguate term “sum coding” used paper multiple analyses, don’t necessarily need mentioned analysis, especially commonalities . Bad first mention: “Condition group sum coded.” (can fine “sum code” defined previously) Good: “Condition coded using sum_code() function contrastable package (Sostarics 2024), using reference level. Group similarly sum coded, X reference level.” Also good: “analyses, use contrastable package (Sostarics, 2024) set contrasts categorical variables. Condition group sum coded (reference level -1, comparisons +1) X reference levels, respectively.” point disambiguate meant “sum code”, inconsistent usage literature. ’s paragraph example describing two models: bit repetitive: “model Experiment 1, Condition treatment coded using treatment_code() function contrastable package (Sostarics, 2024), reference, Group scaled sum coded using scaled_sum_code() function contrastable package, X reference. model Experiment 2, Condition treatment coded treatment_code() function (reference=) Group scaled sum coded scaled_sum_code() (reference=X), additional Context predictor scaled sum coded using scaled_sum_code() function (reference=NoContext).” Rewritten: “use treatment_code() scaled_sum_code() functions contrastable package (Sostarics, 2024) setting contrasts categorical variables. model Experiment 1, Condition treatment coded (reference=) Group scaled sum coded (reference=X). Experiment 2, additional Context predictor scaled sum coded (reference=NoContext); Exp. 1, Condition treatment coded (reference=) Group sum coded (reference=X).” examples: variables, contrasts set using scaled_sum_code() function contrastable package (Sostarics 2024). use contrastable package (Sostarics 2024) contrast coding categorical variables; details contrasts model provided appendix. (sure latter!) contrast matrices returned helmert_code() scaled_sum_code() functions contrastable R package (Sostarics 2024) use set_contrasts() sum_code() functions contrastable package (Sostarics 2024) sum code (+1/-1) variables also recommend writing , potentially footnote, comparisons . Good: “use contrastable package’s sum_code() function (+1/-1, Sostarics 2024) categorical variables.” Better: “use contrastable package’s sum_code() function (+1/-1, Sostarics 2024) categorical variables. contrast scheme encodes differences comparison level grand mean.”","code":""},{"path":"https://tsostarics.github.io/contrastable/articles/warnings.html","id":"common-messages","dir":"Articles","previous_headings":"","what":"Common Messages","title":"Warnings, Messages, and Errors","text":"User notified non-factor column coerced factor set_contrasts enlist_contrasts: User notified exist factors dataframe set call set_contrasts enlist_contrasts. Unordered factors color coded blue, ordered factors colored red. default contrasts options(\"contrasts\") also displayed color coded accordingly. Ordered factors default use contr.poly return coefficient estimates interpretable nth-degree polynomial trends. Typically, contrast matrices set unordered factors, ordered factors bit special case. , user notified setting contrasts ordered factor set_contrasts enlist_contrasts","code":"set_contrasts(mtcars, cyl ~ sum_code) #> Converting to factors: cyl my_data <- mtcars my_data$gear <- ordered(my_data$gear) my_data$carb <- factor(my_data$carb) my_data$cyl <- factor(my_data$cyl)  set_contrasts(my_data, cyl ~ sum_code) #> Expect contr.treatment or contr.poly for unset factors: gear carb my_data <- mtcars my_data$gear <- ordered(my_data$gear)  set_contrasts(my_data, gear ~ sum_code) #> These factors are ordered, you may lose contr.poly: gear"},{"path":"https://tsostarics.github.io/contrastable/articles/warnings.html","id":"warnings","dir":"Articles","previous_headings":"","what":"Warnings","title":"Warnings, Messages, and Errors","text":"User warned attempting set contrasts factor one level. user sets contrasts multiple variables, variables one level successfully computed. However, variables one level just show results. Note output example . Related , user sets contrasts factors one level, error thrown. warning also shown. Contrastable provides flexibility contrasts passed formulas. hood, methods defined following object classes: matrix symbol/name function hypr ’ll receive warning use something else default contrast (depending ordered unordered) used instead. long object inherits one classes though work expected. Accordingly, note class coercion happens . Note accidentally quote function name, receive error instead thinks ’re trying set contrasts atomic character object. issue can commonly occur don’t order right hand side correctly. first term always contrast-generating function variable name ’s assigned object classes. Failure can lead kinds errors depending first element right hand side . ’ve tried document cases illformedness, can’t every case.","code":"my_data <- data.frame(foo = factor(\"A\"),                       boo = factor(c(\"B\", \"C\")))  enlist_contrasts(my_data, foo ~ sum_code, boo ~ sum_code) #> Warning: Contrasts undefined for factors with only one level: foo #> $boo #>    C #> B -1 #> C  1 my_data <- data.frame(foo = factor(\"A\"),                       boo = factor(c(\"B\", \"C\")))  try(enlist_contrasts(my_data, foo ~ sum_code)) #> Expect contr.treatment or contr.poly for unset factors: boo #> Warning: Contrasts undefined for factors with only one level: foo #> Error in enlist_contrasts(my_data, foo ~ sum_code) :  #>   No factors with more than 1 level found my_matrix <- sum_code(3)  # current class is \"matrix\" \"array\" class(my_matrix) <- \"foo\" # now class is \"foo\"  set_contrasts(mtcars, cyl ~ my_matrix) # idk what to do with \"foo\" objects #> Converting to factors: cyl #> Warning in use_contrasts.default(factor_col = get(params[[\"factor_col\"]], : #> Can't set contrasts with object of class foo. Using unordered default #> contr.treatment class(my_matrix) <- c(\"foo\", \"matrix\", \"array\") set_contrasts(mtcars, cyl ~ my_matrix) # idk what \"foo\" is but i know \"matrix\"! #> Converting to factors: cyl try(set_contrasts(mtcars, cyl ~ \"sum_code\")) # sum_code shouldnt be in quotes #> Converting to factors: cyl try(set_contrasts(mtcars, cyl ~ 4 + sum_code)) # bad! #> Converting to factors: cyl try(set_contrasts(mtcars, cyl ~ sum_code + 4)) # good! #> Converting to factors: cyl  # These give different kinds of errors, all are ill-formed try(set_contrasts(mtcars, cyl ~ +4 + sum_code))  #> Converting to factors: cyl try(set_contrasts(mtcars, cyl ~ c(\"a\", \"b\") + sum_code))  #> Converting to factors: cyl try(set_contrasts(mtcars, cyl ~ 1 + 2 + 3 + sum_code))  #> Converting to factors: cyl #> Warning in is.na(params[[which_param]]): is.na() applied to non-(list or #> vector) of type 'symbol'"},{"path":"https://tsostarics.github.io/contrastable/articles/warnings.html","id":"hypr-integration","dir":"Articles","previous_headings":"Warnings","what":"hypr integration","title":"Warnings, Messages, and Errors","text":"hypr another package contrast coding focuses setting desired comparisons factor manually. philosophy comparisons explicitly written , philosophy package well-defined contrast schemes implemented way deterministic prone typing errors. Accordingly, special syntax package provides ignored using hypr objects. Note examples set run ’re forced hypr package installed order install package/build vignette. hypr objects don’t need access levels factor, ’s opportunity mismatches level names arise. matrix might still work intend, isn’t guaranteed. Generally, package isn’t really designed hypr-user mind. , long ’re mindful level names number levels, can plug hypr objects freely conjunction methods. helpful need use custom matrix just one variable, rest can use “standard” contrasts.","code":"library(hypr) my_data <- data.frame(foo = factor(c(\"A\", \"B\", \"C\")))  hypr_object <- hypr::hypr(A ~ B, A ~ C)  set_contrasts(my_data, foo ~ hypr_object + \"B\" * \"B\" - \"C\") Warning messages: 1: In use_contrasts.hypr(factor_col = get(params[[\"factor_col\"]], model_data),  :   reference_level ignored when using hypr object 2: In use_contrasts.hypr(factor_col = get(params[[\"factor_col\"]], model_data),  :   set_intercept ignored when using hypr object 3: In use_contrasts.hypr(factor_col = get(params[[\"factor_col\"]], model_data),  :   drop_trends ignored when using hypr object my_data <- data.frame(foo = factor(c(\"A\", \"B\", \"C\")))  hypr_object <- hypr::hypr(varA ~ varB, varA ~ varC)  set_contrasts(my_data, foo ~ hypr_object)$foo Warning message: In use_contrasts.hypr(factor_col = get(params[[\"factor_col\"]], model_data),  :   Levels in hypr object not found in factor column `foo`: varA, varB, varC Contrasts may be misspecified. my_data <- data.frame(foo = factor(c(\"A\", \"B\", \"C\")),                       boo = factor(c(\"A\", \"B\", \"C\")))  hypr_object <- hypr::hypr(A ~ B, A ~ C)  enlist_contrasts(my_data, foo ~ hypr_object, boo ~ sum_code)"},{"path":"https://tsostarics.github.io/contrastable/articles/warnings.html","id":"glimpse_contrasts-safety-checks","dir":"Articles","previous_headings":"Warnings","what":"glimpse_contrasts safety checks","title":"Warnings, Messages, and Errors","text":"glimpse_contrasts fairly extensive set warnings, ’m giving subsection. Broadly, warnings relate mismatches user defines series formulas actually set provided dataframe. Special warnings provide written R code user can copy paste console fix issue— “fix” refers “setting contrasts dataframe explicitly set_contrasts”. User warned contrast matrix factor dataframe match contrasts defined provided formulas. Note can also define contrast formulas list, reflected warning well. Using contrast-generating matrix functions package set_contrasts enlist_contrasts automatically set comparison labels (.e., column names contrast matrix). However, using functions specify labels (merely return matrices given arbitrary number levels). , manually set contrasts factor without also defining comparison labels, labels missing. using contrast generating function glimpse_contrast, user warned comparison labels don’t match (even though contrast matrices ). ’s example labels missing: ’s example exist don’t match user warned specifying contrasts glimpse_contrasts variable isn’t factor. , set_contrasts coerce variable factor, glimpse_contrasts doesn’t modify dataframe ’s given. described warnings can occur time. combined single warning. Note warned comparison labels matching, numeric matrices nonetheless . Typically, matrices different, labels also different, latter isn’t reported matrices differ save space. Currently, glimpse_contrasts depends provided desired contrast formulas/matrices provide summary table correctly. set contrasts, try summarize dataframe without formulas, ’ll get warning factor (whether unordered ordered) match default contrasts normally expected. example , contrasts set sum_code, default contrasts unordered factors contr.treatment, contrast matrices won’t match my_data$cyl. scheme reported \"???\" Currently, elegant way glimpse_contrasts check contrast scheme based solely resulting matrix. Moreover, many contrast schemes number levels 2, meaning matrix +.5/-.5 scaled_sum_code helmert_code (among others). ’m also reluctant add additional attributes dataframe sole purpose glimpse_contrasts able summarize things. robust solution want make use glimpse_contrasts specify list contrast matrices, pass list set_contrasts glimpse_contrasts.","code":"my_data <- data.frame(foo = factor(\"A\"),                       boo = factor(c(\"B\", \"C\")))  glimpse_contrasts(my_data, boo ~ sum_code) #> Warning: Contrasts for these factors in `my_data` don't match formulas: #>  - boo #> To fix, be sure to run: #> my_data <- set_contrasts(my_data,  #>                          boo ~ sum_code) my_data <- data.frame(foo = factor(\"A\"),                       boo = factor(c(\"B\", \"C\")))  # Define our contrasts outside the call clist <- list(boo ~ sum_code)  glimpse_contrasts(my_data, clist) # Note the final line in the warning #> Warning: Contrasts for these factors in `my_data` don't match formulas: #>  - boo #> To fix, be sure to run: #> my_data <- set_contrasts(my_data, clist) my_data <- mtcars my_data$cyl <- factor(my_data$cyl)  # This will erase the column names contrasts(my_data$cyl) <- helmert_code(3)  glimpse_contrasts(my_data, cyl ~ helmert_code) #> Warning: Comparison labels for contrasts in `my_data` don't match: #>  - cyl   (expected `<6, <8` but found ``) #> To fix, be sure to run: #> my_data <- set_contrasts(my_data,  #>                          cyl ~ helmert_code) my_data <- mtcars my_data$cyl <- factor(my_data$cyl) # contr.treatment by default  glimpse_contrasts(my_data, cyl ~ treatment_code | c(\"6vs4\", \"8vs4\")) #> Warning: Comparison labels for contrasts in `my_data` don't match: #>  - cyl   (expected `6vs4, 8vs4` but found `6, 8`) #> To fix, be sure to run: #> my_data <- set_contrasts(my_data,  #>                          cyl ~ treatment_code | c(\"6vs4\", \"8vs4\")) my_data <- mtcars  glimpse_contrasts(my_data, cyl ~ sum_code) #> Warning: These vars in `my_data` are not factors: #>  - cyl #> To fix, be sure to run: #> my_data <- set_contrasts(my_data,  #>                          cyl ~ sum_code) my_data <- mtcars my_data$cyl <- factor(my_data$cyl) # contr.treatment by default my_data$carb <- factor(my_data$carb) contrasts(my_data$cyl) <- sum_code(3) my_data$am <- factor(my_data$am)  glimpse_contrasts(my_data,                    cyl ~ sum_code,                    carb ~ sum_code,                    gear ~ sum_code,                   am ~ treatment_code | c(\"diffLabel\")) #> Warning: These vars in `my_data` are not factors: #>  - gear #> Contrasts for these factors in `my_data` don't match formulas: #>  - carb #> Comparison labels for contrasts in `my_data` don't match: #>  - cyl   (expected `6, 8` but found ``) #>  - am    (expected `diffLabel` but found `1`) #> To fix, be sure to run: #> my_data <- set_contrasts(my_data,  #>                          cyl ~ sum_code, #>                          carb ~ sum_code, #>                          gear ~ sum_code, #>                          am ~ treatment_code | c(\"diffLabel\")) my_data <- set_contrasts(mtcars, cyl ~ sum_code, verbose = FALSE)  glimpse_contrasts(my_data) #> Warning in .warn_if_nondefault(default_contrasts, unset_factors, factor_sizes, : Unset factors do not use default contr.treatment or contr.poly. Glimpse table may be unreliable. #>  - cyl #>     factor n level_names scheme reference  intercept orthogonal centered #> cyl    cyl 3     4, 6, 8    ???         4 grand mean         NA       NA #>     dropped_trends explicitly_set #> cyl             NA          FALSE contrast_list <- list(cyl ~ scaled_sum_code,                        carb ~ sum_code,                        gear ~ sum_code,                       am ~ treatment_code | c(\"diffLabel\"))  my_data <- set_contrasts(mtcars, contrast_list, verbose = FALSE) glimpse_contrasts(my_data, contrast_list)"},{"path":"https://tsostarics.github.io/contrastable/articles/warnings.html","id":"errors","dir":"Articles","previous_headings":"","what":"Errors","title":"Warnings, Messages, and Errors","text":"common errors, though errors contrastable per se. ’ll receive error use matrix ’s different size contrast matrix . Specifically, contrasts matrices factor n levels size nx(n-1). ’ll receive error try set reference level (intercept) level doesn’t exist factor. ’ll receive error accidentally use = instead ~ ’ll receive error accidentally specify contrasts variable : ’ll receive error accidentally forget pass dataframe: ’ll receive error forget pass contrasts formulas: Variables one level ignored, ’ll receive error remaining variables one level (.e., specify one-level factors). Note ’ll still get warning message.","code":"my_matrix <- sum_code(4) try(set_contrasts(mtcars, cyl ~ my_matrix)) # cyl has 3 levels, not 4 #> Converting to factors: cyl #> Error in use_contrasts.matrix(factor_col = get(params[[\"factor_col\"]],  :  #>   Matrix given to code_by is size 4x3 but factor_col contrast matrix is size 3x2. try(set_contrasts(mtcars, cyl ~ sum_code + 100)) #> Converting to factors: cyl #> Error in .switch_reference_if_needed(new_contrasts, reference_level, new_reference_index) :  #>   Reference level not found in factor levels try(set_contrasts(mtcars, cyl ~ sum_code * \"blah\")) #> Converting to factors: cyl #> Error in .set_intercept(new_contrasts, set_intercept) :  #>   Specified level to use as intercept not found in factor level names try(set_contrasts(mtcars, cyl = sum_code)) #> Error : In `base::tryCatch(base::withCallingHandlers({     NULL     base::sa...`:  #> `x` must be a formula #> ℹ Did you use = instead of ~ when setting the contrast? try(set_contrasts(mtcars,                          cyl ~ sum_code,                           cyl ~ scaled_sum_code)) #> Error : In `base::tryCatch(base::withCallingHandlers({     NULL     base::sa...`:  #> Names must be unique. #> ✖ These names are duplicated: #>   * \"cyl\" at locations 1 and 2. #> ℹ Left hand side of multiple formulas evaluated to the same column name  try(set_contrasts(mtcars,                           cyl + gear ~ sum_code,                          cyl ~ scaled_sum_code)) #> Error : In `base::tryCatch(base::withCallingHandlers({     NULL     base::sa...`:  #> Names must be unique. #> ✖ These names are duplicated: #>   * \"cyl\" at locations 1 and 3. #> ℹ Left hand side of multiple formulas evaluated to the same column name  try(set_contrasts(mtcars,                           where(is.numeric) ~ sum_code,                           cyl ~ scaled_sum_code)) #> Error : In `base::tryCatch(base::withCallingHandlers({     NULL     base::sa...`:  #> Names must be unique. #> ✖ These names are duplicated: #>   * \"cyl\" at locations 2 and 12. #> ℹ Left hand side of multiple formulas evaluated to the same column name  these_vars <- c(\"cyl\", \"gear\")  try(set_contrasts(mtcars,                           all_of(these_vars) ~ sum_code,                           where(is.numeric) ~ scaled_sum_code)) #> Error : In `base::tryCatch(base::withCallingHandlers({     NULL     base::sa...`:  #> Names must be unique. #> ✖ These names are duplicated: #>   * \"cyl\" at locations 1 and 4. #>   * \"gear\" at locations 2 and 12. #> ℹ Left hand side of multiple formulas evaluated to the same column name try(set_contrasts(cyl ~ sum_code)) #> Error in enlist_contrasts(model_data, !!!formulas, verbose = verbose) :  #>   Formula passed to model_data, did you forget to pass a data frame? try(set_contrasts(mtcars)) #> Error in .warn_if_onelevel(lhs_variables[is_onelevel_factor]) :  #>   If factor names are not provided, the model data and factors being set must be provided try(set_contrasts(data.frame(a = factor(1)),                          a ~ sum_code)) #> Warning: Contrasts undefined for factors with only one level: a #> Error in enlist_contrasts(model_data, !!!formulas, verbose = verbose) :  #>   No factors with more than 1 level found"},{"path":"https://tsostarics.github.io/contrastable/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thomas Sostarics. Author, maintainer, copyright holder.","code":""},{"path":"https://tsostarics.github.io/contrastable/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sostarics, T. (2024). contrastable: Contrast Coding Utilities R. R package version 1.0.2. https://CRAN.R-project.org/package=contrastable. doi:10.5281/zenodo.11869427","code":"@Manual{,   author = {Thomas Sostarics},   title = {{contrastable}: Contrast Coding Utilities in {R}},   year = {2024},   note = {R package version 1.0.2},   url = {https://CRAN.R-project.org/package=contrastable},   doi = {10.5281/zenodo.11869427}, }"},{"path":"https://tsostarics.github.io/contrastable/index.html","id":"contrastable","dir":"","previous_headings":"","what":"Consistent Contrast Coding for Factors","title":"Consistent Contrast Coding for Factors","text":"package provides utilities set different common contrast coding schemes use regression models. Detailed usage available contrasts vignette vignette('contrasts', 'contrastable').","code":""},{"path":"https://tsostarics.github.io/contrastable/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Consistent Contrast Coding for Factors","text":"can install CRAN : can install development version GitHub :","code":"install.packages(\"contrastable\") # install.packages(\"devtools\") devtools::install_github(\"tsostarics/contrastable\", build_vignettes = TRUE)"},{"path":"https://tsostarics.github.io/contrastable/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Consistent Contrast Coding for Factors","text":"cite contrastable publications, please use Sostarics, T. (2024). contrastable: Contrast Coding Utilities R. R package version 1.0.2. BibTeX entry LaTeX users See Citation Examples section contrasts vignette suggestions examples cite package paper.","code":"@Manual{, author = {Thomas Sostarics}, title = {{contrastable}: Contrast Coding Utilities in {R}}, year = {2024}, note = {R package version 1.0.2}, url = {https://CRAN.R-project.org/package=contrastable}, doi = {10.5281/zenodo.11869427}, }"},{"path":"https://tsostarics.github.io/contrastable/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Consistent Contrast Coding for Factors","text":"simple example showing set particular factors specific contrast scheme. set_contrasts can used set contrasts onto dataframe , needed modeling function lacks contrasts argument. can use glimpse_contrasts get information factors diagnostics scheme set. enlist_contrasts can used generate named list contrasts can used contrasts argument various modeling functions. can also set multiple contrasts using tidyselect functionality. functions package aim helpful potential mistakes made transparent things happen behind scenes (e.g., automatic factor coercion). can check descriptions various messages warnings warnings vignette vignette('warnings', 'contrastable').","code":"library(contrastable) my_data <- mtcars my_data$gear <- ordered(my_data$gear) # Set as ordered factor in dataframe # Specify the contrast schemes we want, factor conversion done automatically # Set reference level with + and intercept with * my_data <- set_contrasts(my_data,                           cyl ~ scaled_sum_code + 6,                          carb ~ helmert_code,                          vs ~ treatment_code + 1,                          print_contrasts = TRUE) #> Converting to factors: cyl carb vs #> Expect contr.treatment or contr.poly for unset factors: gear #> $cyl #>   4    8    #> 4  2/3 -1/3 #> 6 -1/3 -1/3 #> 8 -1/3  2/3 #>  #> $carb #>   <2   <3   <4   <6   <8   #> 1 -1/2 -1/3 -1/4 -1/5 -1/6 #> 2  1/2 -1/3 -1/4 -1/5 -1/6 #> 3    0  2/3 -1/4 -1/5 -1/6 #> 4    0    0  3/4 -1/5 -1/6 #> 6    0    0    0  4/5 -1/6 #> 8    0    0    0    0  5/6 #>  #> $vs #>   0 #> 0 1 #> 1 0 # Create a reusable list to use with multiple functions contrast_schemes <- list(   cyl ~ scaled_sum_code + 6,   carb ~ helmert_code,   vs ~ treatment_code + 1 )  # Get information about our contrasts, even those we didn't explicitly set # (gear is ordered, and so uses contr.poly by default) glimpse_contrasts(my_data,                   contrast_schemes,                   add_namespace = TRUE,                   show_all_factors = TRUE) |>   knitr::kable() # Get a list of the contrasts we've explicitly set enlist_contrasts(mtcars, contrast_schemes) #> $cyl #>   4    8    #> 4  2/3 -1/3 #> 6 -1/3 -1/3 #> 8 -1/3  2/3 #>  #> $carb #>   <2   <3   <4   <6   <8   #> 1 -1/2 -1/3 -1/4 -1/5 -1/6 #> 2  1/2 -1/3 -1/4 -1/5 -1/6 #> 3    0  2/3 -1/4 -1/5 -1/6 #> 4    0    0  3/4 -1/5 -1/6 #> 6    0    0    0  4/5 -1/6 #> 8    0    0    0    0  5/6 #>  #> $vs #>   0 #> 0 1 #> 1 0 # Create a new dataframe with a bunch of factors my_data2 <-    data.frame(a = gl(2,10),              b = gl(5,2, ordered = TRUE),              c = gl(5,2),              d = 1:10,              e = 11:20)  enlist_contrasts(my_data2,                  where(is.ordered) ~ polynomial_code,                  where(is.unordered) ~ helmert_code,                  d + e ~ sum_code) #> $b #>              .L         .Q            .C         ^4 #> 1 -6.324555e-01  0.5345225 -3.162278e-01  0.1195229 #> 2 -3.162278e-01 -0.2672612  6.324555e-01 -0.4780914 #> 3 -3.510833e-17 -0.5345225  1.755417e-16  0.7171372 #> 4  3.162278e-01 -0.2672612 -6.324555e-01 -0.4780914 #> 5  6.324555e-01  0.5345225  3.162278e-01  0.1195229 #>  #> $a #>     <2 #> 1 -0.5 #> 2  0.5 #>  #> $c #>     <2         <3    <4   <5 #> 1 -0.5 -0.3333333 -0.25 -0.2 #> 2  0.5 -0.3333333 -0.25 -0.2 #> 3  0.0  0.6666667 -0.25 -0.2 #> 4  0.0  0.0000000  0.75 -0.2 #> 5  0.0  0.0000000  0.00  0.8 #>  #> $d #>     2  3  4  5  6  7  8  9 10 #> 1  -1 -1 -1 -1 -1 -1 -1 -1 -1 #> 2   1  0  0  0  0  0  0  0  0 #> 3   0  1  0  0  0  0  0  0  0 #> 4   0  0  1  0  0  0  0  0  0 #> 5   0  0  0  1  0  0  0  0  0 #> 6   0  0  0  0  1  0  0  0  0 #> 7   0  0  0  0  0  1  0  0  0 #> 8   0  0  0  0  0  0  1  0  0 #> 9   0  0  0  0  0  0  0  1  0 #> 10  0  0  0  0  0  0  0  0  1 #>  #> $e #>    12 13 14 15 16 17 18 19 20 #> 11 -1 -1 -1 -1 -1 -1 -1 -1 -1 #> 12  1  0  0  0  0  0  0  0  0 #> 13  0  1  0  0  0  0  0  0  0 #> 14  0  0  1  0  0  0  0  0  0 #> 15  0  0  0  1  0  0  0  0  0 #> 16  0  0  0  0  1  0  0  0  0 #> 17  0  0  0  0  0  1  0  0  0 #> 18  0  0  0  0  0  0  1  0  0 #> 19  0  0  0  0  0  0  0  1  0 #> 20  0  0  0  0  0  0  0  0  1"},{"path":"https://tsostarics.github.io/contrastable/reference/as.unordered.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to unordered factor — as.unordered","title":"Convert to unordered factor — as.unordered","text":"Unordered analogue base R's .ordered. convert x unordered factor; unlike .factor(), convert ordered factors unordered factors.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/as.unordered.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to unordered factor — as.unordered","text":"","code":"as.unordered(x)"},{"path":"https://tsostarics.github.io/contrastable/reference/as.unordered.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to unordered factor — as.unordered","text":"x Object convert unordered factor","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/as.unordered.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to unordered factor — as.unordered","text":"x unordered factor","code":""},{"path":[]},{"path":"https://tsostarics.github.io/contrastable/reference/as.unordered.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to unordered factor — as.unordered","text":"","code":"# Convert an ordered factor to unordered as.unordered(gl(5,1,ordered = TRUE)) #> [1] 1 2 3 4 5 #> Levels: 1 2 3 4 5  # If level order is pre-specified differently from default alphabetical order # then the ordering will be retained as.unordered(ordered(c(\"a\", \"b\", \"c\"), levels = c(\"c\", \"a\", \"b\"))) #> [1] a b c #> Levels: c a b  # Otherwise the vector will be converted to an unordered factor with levels # in the default alphabetical order as.unordered(c(\"c\", \"a\", \"b\")) #> [1] c a b #> Levels: a b c  # Note that coercing integer values will sort the values to use as the levels as.unordered(4:1) #> [1] 4 3 2 1 #> Levels: 1 2 3 4"},{"path":"https://tsostarics.github.io/contrastable/reference/backward_difference_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Backward difference code — backward_difference_code","title":"Backward difference code — backward_difference_code","text":"Compares mean level k level k-1. Differs direction forward_difference_code, careful pick right function.  See also contr.sdif.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/backward_difference_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Backward difference code — backward_difference_code","text":"","code":"backward_difference_code(n)"},{"path":"https://tsostarics.github.io/contrastable/reference/backward_difference_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Backward difference code — backward_difference_code","text":"n Integer umber factor levels compute contrasts .","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/backward_difference_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Backward difference code — backward_difference_code","text":"contrast matrix dimensions n rows (n-1) columns.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/backward_difference_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Backward difference code — backward_difference_code","text":"Example interpretation 4 level factor: Intercept = Grand mean (mean means level) grp1 = mean(grp2) - mean(grp1) grp2 = mean(grp3) - mean(grp2) grp3 = mean(grp4) - mean(grp3)","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/backward_difference_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Backward difference code — backward_difference_code","text":"","code":"mydf <- data.frame(   grp = gl(4,5),   resp = c(seq(1, 5), seq(5, 9), seq(10, 14), seq(15, 19)) )  mydf <- set_contrasts(mydf, grp ~ backward_difference_code)  lm(resp ~ grp, data = mydf) #>  #> Call: #> lm(formula = resp ~ grp, data = mydf) #>  #> Coefficients: #> (Intercept)       grp2-1       grp3-2       grp4-3   #>        9.75         4.00         5.00         5.00   #>"},{"path":"https://tsostarics.github.io/contrastable/reference/cumulative_split_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative split contrasts — cumulative_split_code","title":"Cumulative split contrasts — cumulative_split_code","text":"Contrast coding scheme repeatedly dichotomizes factor levels.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/cumulative_split_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative split contrasts — cumulative_split_code","text":"","code":"cumulative_split_code(n)"},{"path":"https://tsostarics.github.io/contrastable/reference/cumulative_split_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative split contrasts — cumulative_split_code","text":"n Integer umber factor levels compute contrasts .","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/cumulative_split_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative split contrasts — cumulative_split_code","text":"contrast matrix dimensions n rows (n-1) columns.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/cumulative_split_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cumulative split contrasts — cumulative_split_code","text":"scheme similar Helmert contrasts, instead comparing one level accumulated mean previous levels, comparison scheme splits levels two groups: including current level, current level. Conceptually similar continuation ratio logits used ordinal models. example, four level factor levels , B, C, D, comparisons : vs. BCD AB vs. CD ABC vs. D words, comparison splits levels two groups. comparisons uses cumulative mean levels group. intercept grand mean.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/cumulative_split_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative split contrasts — cumulative_split_code","text":"","code":"set.seed(111) mydf <- data.frame(   grp = rep(c(\"a\", \"b\", \"c\", \"d\"), each = 2000),   val = c(     rnorm(200, 2, 1),     rnorm(200, 5, 1),     rnorm(200, 7.5, 1),     rnorm(200, 15, 1)   ) ) |>   set_contrasts(grp ~ cumulative_split_code |     c(\"a-rest\", \"ab-rest\", \"abc-rest\")) #> Converting to factors: grp  lm(val ~ grp, data = mydf) #>  #> Call: #> lm(formula = val ~ grp, data = mydf) #>  #> Coefficients: #> (Intercept)    grpa-rest   grpab-rest  grpabc-rest   #>   7.382e+00   -1.027e+00    1.297e-16   -1.027e+00   #>"},{"path":"https://tsostarics.github.io/contrastable/reference/decompose_contrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Decompose contrasts into new columns — decompose_contrasts","title":"Decompose contrasts into new columns — decompose_contrasts","text":"Given dataframe factor columns, function extract contrasts factor column place inside new columns. useful cases want work numeric values contrasts. pedagogical example, can explicitly show factor variables transformed numeric values. practical example, typically allowed n-1 contrasts n levels factor. want use contrasts, can extract ones want use model. sometimes used polynomial contrasts want use higher order polynomials.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/decompose_contrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decompose contrasts into new columns — decompose_contrasts","text":"","code":"decompose_contrasts(   model_data,   extract,   remove_intercept = TRUE,   remove_original = FALSE )"},{"path":"https://tsostarics.github.io/contrastable/reference/decompose_contrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decompose contrasts into new columns — decompose_contrasts","text":"model_data Dataframe factor columns extract one-sided formula denoting factors extract. Note ideally pass model fitting function, sans non-factors. remove_intercept Logical, whether remove column corresponding intercept. Default TRUE  since always just column 1s remove_original Logical, whether remove original columns data frame decomposing separate columns. Default FALSE.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/decompose_contrasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decompose contrasts into new columns — decompose_contrasts","text":"model_data new columns corresponding numeric coding given factor's contrasts","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/decompose_contrasts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Decompose contrasts into new columns — decompose_contrasts","text":"additional usage function compute contrasts interaction terms model. lm(y ~ * B), B factors, expanded form lm(y ~ + B + :B) equation \\(y = \\beta_Ax_A + \\beta_Bx_B + \\beta_{:B}x_Ax_B\\). thing note coefficient interaction(s) multiplied product \\(x_A\\) \\(x_B\\). call product \\(x_C\\). example, one value \\(x_A\\) -1/3 one value \\(x_B\\) 2/3, product \\(x_C\\) -2/9. , 3 levels \\(x_A\\) 3 levels \\(x_B\\), get 4 columns fixed effects 4 columns interaction terms. can lot tedious work precompute products manually, can use function extract_interaction = TRUE compute everything .","code":""},{"path":[]},{"path":"https://tsostarics.github.io/contrastable/reference/decompose_contrasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decompose contrasts into new columns — decompose_contrasts","text":"","code":"# Decompose contrasts for carb and gear columns into new columns, using # the contrast labels used when setting the contrasts mtcars |>   set_contrasts(     carb ~ scaled_sum_code,     gear ~ contr.sum | c(\"4-mean\", \"5-mean\")   ) |>   decompose_contrasts(~ carb + gear) |>   str() #> Converting to factors: carb gear #> 'data.frame':\t32 obs. of  18 variables: #>  $ mpg       : num  21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ... #>  $ cyl       : num  6 6 4 6 8 6 8 4 4 6 ... #>  $ disp      : num  160 160 108 258 360 ... #>  $ hp        : num  110 110 93 110 175 105 245 62 95 123 ... #>  $ drat      : num  3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ... #>  $ wt        : num  2.62 2.88 2.32 3.21 3.44 ... #>  $ qsec      : num  16.5 17 18.6 19.4 17 ... #>  $ vs        : num  0 0 1 1 0 1 0 1 1 1 ... #>  $ am        : num  1 1 1 0 0 0 0 0 0 0 ... #>  $ gear      : Factor w/ 3 levels \"3\",\"4\",\"5\": 2 2 2 1 1 1 1 2 2 2 ... #>   ..- attr(*, \"contrasts\")= num [1:3, 1:2] -1 1 0 -1 0 1 #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : chr [1:3] \"3\" \"4\" \"5\" #>   .. .. ..$ : chr [1:2] \"4-mean\" \"5-mean\" #>  $ carb      : Factor w/ 6 levels \"1\",\"2\",\"3\",\"4\",..: 4 4 1 1 2 1 4 2 2 4 ... #>   ..- attr(*, \"contrasts\")= num [1:6, 1:5] -0.167 0.833 -0.167 -0.167 -0.167 ... #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : chr [1:6] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. ..$ : chr [1:5] \"2\" \"3\" \"4\" \"6\" ... #>  $ carb2     : num  -0.167 -0.167 -0.167 -0.167 0.833 ... #>  $ carb3     : num  -0.167 -0.167 -0.167 -0.167 -0.167 ... #>  $ carb4     : num  0.833 0.833 -0.167 -0.167 -0.167 ... #>  $ carb6     : num  -0.167 -0.167 -0.167 -0.167 -0.167 ... #>  $ carb8     : num  -0.167 -0.167 -0.167 -0.167 -0.167 ... #>  $ gear4-mean: num  1 1 1 -1 -1 -1 -1 1 1 1 ... #>  $ gear5-mean: num  0 0 0 -1 -1 -1 -1 0 0 0 ...  # Decompose an interaction term between the two factors mtcars |>   set_contrasts(     carb ~ scaled_sum_code,     gear ~ contr.sum | c(\"4-mean\", \"5-mean\")   ) |>   decompose_contrasts(~ carb * gear) |>   str() #> Converting to factors: carb gear #> 'data.frame':\t32 obs. of  28 variables: #>  $ mpg             : num  21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ... #>  $ cyl             : num  6 6 4 6 8 6 8 4 4 6 ... #>  $ disp            : num  160 160 108 258 360 ... #>  $ hp              : num  110 110 93 110 175 105 245 62 95 123 ... #>  $ drat            : num  3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ... #>  $ wt              : num  2.62 2.88 2.32 3.21 3.44 ... #>  $ qsec            : num  16.5 17 18.6 19.4 17 ... #>  $ vs              : num  0 0 1 1 0 1 0 1 1 1 ... #>  $ am              : num  1 1 1 0 0 0 0 0 0 0 ... #>  $ gear            : Factor w/ 3 levels \"3\",\"4\",\"5\": 2 2 2 1 1 1 1 2 2 2 ... #>   ..- attr(*, \"contrasts\")= num [1:3, 1:2] -1 1 0 -1 0 1 #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : chr [1:3] \"3\" \"4\" \"5\" #>   .. .. ..$ : chr [1:2] \"4-mean\" \"5-mean\" #>  $ carb            : Factor w/ 6 levels \"1\",\"2\",\"3\",\"4\",..: 4 4 1 1 2 1 4 2 2 4 ... #>   ..- attr(*, \"contrasts\")= num [1:6, 1:5] -0.167 0.833 -0.167 -0.167 -0.167 ... #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : chr [1:6] \"1\" \"2\" \"3\" \"4\" ... #>   .. .. ..$ : chr [1:5] \"2\" \"3\" \"4\" \"6\" ... #>  $ carb2           : num  -0.167 -0.167 -0.167 -0.167 0.833 ... #>  $ carb3           : num  -0.167 -0.167 -0.167 -0.167 -0.167 ... #>  $ carb4           : num  0.833 0.833 -0.167 -0.167 -0.167 ... #>  $ carb6           : num  -0.167 -0.167 -0.167 -0.167 -0.167 ... #>  $ carb8           : num  -0.167 -0.167 -0.167 -0.167 -0.167 ... #>  $ gear4-mean      : num  1 1 1 -1 -1 -1 -1 1 1 1 ... #>  $ gear5-mean      : num  0 0 0 -1 -1 -1 -1 0 0 0 ... #>  $ carb2:gear4-mean: num  -0.167 -0.167 -0.167 0.167 -0.833 ... #>  $ carb3:gear4-mean: num  -0.167 -0.167 -0.167 0.167 0.167 ... #>  $ carb4:gear4-mean: num  0.833 0.833 -0.167 0.167 0.167 ... #>  $ carb6:gear4-mean: num  -0.167 -0.167 -0.167 0.167 0.167 ... #>  $ carb8:gear4-mean: num  -0.167 -0.167 -0.167 0.167 0.167 ... #>  $ carb2:gear5-mean: num  0 0 0 0.167 -0.833 ... #>  $ carb3:gear5-mean: num  0 0 0 0.167 0.167 ... #>  $ carb4:gear5-mean: num  0 0 0 0.167 0.167 ... #>  $ carb6:gear5-mean: num  0 0 0 0.167 0.167 ... #>  $ carb8:gear5-mean: num  0 0 0 0.167 0.167 ..."},{"path":"https://tsostarics.github.io/contrastable/reference/dot-add_namespace.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup namespace of contrast scheme function — .add_namespace","title":"Lookup namespace of contrast scheme function — .add_namespace","text":"Given name contrast scheme (ie function name creates contrast matrix), lookup namespace belongs add string. Used report packages used glimpse table, e.g., stats, contrastable, bayesTestR","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-add_namespace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup namespace of contrast scheme function — .add_namespace","text":"","code":".add_namespace(scheme_names)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-add_namespace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup namespace of contrast scheme function — .add_namespace","text":"scheme_names Character vector","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-add_namespace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup namespace of contrast scheme function — .add_namespace","text":"character vector updated function names namespaces","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-bundle_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract parameters from dots — .bundle_params","title":"Extract parameters from dots — .bundle_params","text":"arguments passed contrast coding function user, ensure bundled together correctly. especially important setting number levels correctly.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-bundle_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract parameters from dots — .bundle_params","text":"","code":".bundle_params(factor_col, ...)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-bundle_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract parameters from dots — .bundle_params","text":"factor_col Factor set contrasts ... arguments passed user","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-bundle_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract parameters from dots — .bundle_params","text":"Function call parameters list","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-cols_where.html","id":null,"dir":"Reference","previous_headings":"","what":"Get columns where — .cols_where","title":"Get columns where — .cols_where","text":"Helper avoid use tidyselect dplyr::select, returns either logical vector (optionally named) character vector columns satisfy given function","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-cols_where.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get columns where — .cols_where","text":"","code":".cols_where(model_data, fx, use_names = FALSE, return_names = FALSE)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-cols_where.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get columns where — .cols_where","text":"model_data Model data fx Function apply, must something returns logical value. Usually either .factor .ordered use_names Whether resulting vector named return_names Whether names (fx returns TRUE) returned instead logical vector. Overwrites use.names.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-cols_where.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get columns where — .cols_where","text":"Optionally named logical vector character vector depending values use_names return_names","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-convert_to_factors.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert non factors to factors — .convert_to_factors","title":"Convert non factors to factors — .convert_to_factors","text":"Helper convert columns factors already","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-convert_to_factors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert non factors to factors — .convert_to_factors","text":"","code":".convert_to_factors(model_data, vars_in_model, verbose = TRUE)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-convert_to_factors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert non factors to factors — .convert_to_factors","text":"model_data Model data vars_in_model variables specified contrast coding formulas verbose messages sent? Defaults TRUE","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-convert_to_factors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert non factors to factors — .convert_to_factors","text":"model_data specified columns coerced factors","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-expand_formulas.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand contrast formulas — .expand_formulas","title":"Expand contrast formulas — .expand_formulas","text":"Uses {tidyselect} functionality expand left hand side formula multiple formulas. See examples enlist_contrasts examples.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-expand_formulas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand contrast formulas — .expand_formulas","text":"","code":".expand_formulas(formulas, data)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-expand_formulas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand contrast formulas — .expand_formulas","text":"formulas List formulas data Dataframe evaluate names ","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-expand_formulas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand contrast formulas — .expand_formulas","text":"Named list formulas","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_dimnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dimnames of contrasts from factor — .get_dimnames","title":"Get dimnames of contrasts from factor — .get_dimnames","text":"Given factor, extract row column names contrasts. set, use default values. Also helps catch invalid usage polynomial contrasts.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_dimnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dimnames of contrasts from factor — .get_dimnames","text":"","code":".get_dimnames(factor_col)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_dimnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get dimnames of contrasts from factor — .get_dimnames","text":"factor_col Factor extract contrasts ","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_dimnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get dimnames of contrasts from factor — .get_dimnames","text":"List rownames column names","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_from_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve value from param list — .get_from_params","title":"Retrieve value from param list — .get_from_params","text":"Helper evaluate param entries.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_from_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve value from param list — .get_from_params","text":"","code":".get_from_params(what, list_params, formulas)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_from_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve value from param list — .get_from_params","text":"parameter retrieve list_params List params, see .make_parameters() formulas Formulas used set contrasts","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_from_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve value from param list — .get_from_params","text":"Requested value parameter string","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_reference_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Get reference level of contrast matrix — .get_reference_level","title":"Get reference level of contrast matrix — .get_reference_level","text":"Compute reference level manually information available via parameters","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_reference_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get reference level of contrast matrix — .get_reference_level","text":"","code":".get_reference_level(contrast_matrix)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_reference_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get reference level of contrast matrix — .get_reference_level","text":"contrast_matrix Contrast matrix, NULL throw error","code":""},{"path":[]},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_reference_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get reference levels from a (possibly set) list of contrasts — .get_reference_levels","title":"Get reference levels from a (possibly set) list of contrasts — .get_reference_levels","text":"Given list contrast matrices, contrast matrices explicitly generated via formulas already parameters parsed, use parameters look reference level contrast matrix. parameters computed (usually contrasts using defaults) look reference level manually.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_reference_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get reference levels from a (possibly set) list of contrasts — .get_reference_levels","text":"","code":".get_reference_levels(contrast_list, list_params = NULL, formulas = NULL)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_reference_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get reference levels from a (possibly set) list of contrasts — .get_reference_levels","text":"contrast_list List contrasts, need named list_params Optional list parameters, see .make_parameters(), NULL, reference level determined contrast matrix directly. formulas Optional list formulas, needed params passed. Used get correct environment evaluating expressions params. NULL, reference level determiend contrast matrix directly.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_reference_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get reference levels from a (possibly set) list of contrasts — .get_reference_levels","text":"Character vector reference levels. contrast matrix specified row names, character value denote integer index row reference level (usually 1).","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_reserved_operator.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for reserved operators — .get_reserved_operator","title":"Check for reserved operators — .get_reserved_operator","text":"helper .make_parameters(), takes symbol checks whether corresponds one reserved operators package syntax.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_reserved_operator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for reserved operators — .get_reserved_operator","text":"","code":".get_reserved_operator(node)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_reserved_operator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for reserved operators — .get_reserved_operator","text":"node symbol, extracted formula","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_reserved_operator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for reserved operators — .get_reserved_operator","text":"node reserved operator, return operator string. Otherwise return string \"none\".","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_scheme_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get contrast scheme labels for glimpse table — .get_scheme_labels","title":"Get contrast scheme labels for glimpse table — .get_scheme_labels","text":"Looks contrast functions formulas appends necessary namespaces","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_scheme_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get contrast scheme labels for glimpse table — .get_scheme_labels","text":"","code":".get_scheme_labels(list_params, formulas)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_scheme_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get contrast scheme labels for glimpse table — .get_scheme_labels","text":"list_params List params, see .make_parameters() formulas Formulas passed user","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-get_scheme_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get contrast scheme labels for glimpse table — .get_scheme_labels","text":"Character vector","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-glimpse_default_factors.html","id":null,"dir":"Reference","previous_headings":"","what":"Glimpse default factors — .glimpse_default_factors","title":"Glimpse default factors — .glimpse_default_factors","text":"Given dataframe factor columns character vector columns already set , look factor columns get glimpse treated defaults specified options('contrasts'). Reference level assumed first level unordered factors nonexistent ordered factors.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-glimpse_default_factors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Glimpse default factors — .glimpse_default_factors","text":"","code":".glimpse_default_factors(   model_data,   set_factors = NULL,   show_one_level_factors = FALSE,   minimal = TRUE,   verbose = TRUE )"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-glimpse_default_factors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Glimpse default factors — .glimpse_default_factors","text":"model_data Data passed model fitting function set_factors Explicitly set columns ignore show_one_level_factors Logical, factors one level included output? Default FALSE omit minimal Logical, default TRUE, whether omit orthogonal, centered, dropped_trends, explicitly_set columns output table verbose Logical, defaults TRUE, whether messages printed","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-glimpse_default_factors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Glimpse default factors — .glimpse_default_factors","text":"table information contrasts remaining factor columns","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-is_polynomial_scheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a scheme is a polynomial scheme — .is_polynomial_scheme","title":"Check if a scheme is a polynomial scheme — .is_polynomial_scheme","text":"Helper check contrast coding function one polynomial schemes","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-is_polynomial_scheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a scheme is a polynomial scheme — .is_polynomial_scheme","text":"","code":".is_polynomial_scheme(scheme)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-is_polynomial_scheme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a scheme is a polynomial scheme — .is_polynomial_scheme","text":"scheme Contrast coding function string function name","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-is_polynomial_scheme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a scheme is a polynomial scheme — .is_polynomial_scheme","text":"TRUE polynomial scheme, FALSE otherwise","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-is_reserved_operator.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if node is a contrast-manipulation operator — .is_reserved_operator","title":"Check if node is a contrast-manipulation operator — .is_reserved_operator","text":"symbols reserved special syntax implemented package. function checks given node (.e., call) one + - * |","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-is_reserved_operator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if node is a contrast-manipulation operator — .is_reserved_operator","text":"","code":".is_reserved_operator(node, check_sym = NULL)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-is_reserved_operator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if node is a contrast-manipulation operator — .is_reserved_operator","text":"node List element check_sym NULL (default), check reserved operators. Otherwise, string converted symbol.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-is_reserved_operator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if node is a contrast-manipulation operator — .is_reserved_operator","text":"TRUE node identical reserved operator, otherwise FALSE","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-is_valid_contrmat.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if valid contrast — .is_valid_contrmat","title":"Check if valid contrast — .is_valid_contrmat","text":"Sometimes user might pass matrix actually used, case can avoid calculations stopping earlier.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-is_valid_contrmat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if valid contrast — .is_valid_contrmat","text":"","code":".is_valid_contrmat(contrast_matrix)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-is_valid_contrmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if valid contrast — .is_valid_contrmat","text":"contrast_matrix Contrast matrix","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-is_valid_contrmat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if valid contrast — .is_valid_contrmat","text":"invisibly returns TRUE contrast matrix valid","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-make_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Make parameters for contrast code call — .make_parameters","title":"Make parameters for contrast code call — .make_parameters","text":"Given formula, recursively go abstract syntax tree extract necessary parameters use_contrasts(). method involved extracting parsed string representation, think handles matrix calls better since plucks call right syntax tree.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-make_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make parameters for contrast code call — .make_parameters","text":"","code":".make_parameters(   formula,   params = list(factor_col = NA, code_by = NA, reference_level = NA, intercept_level =     NA, drop_trends = NA, labels = NULL, as_is = FALSE),   env = NULL,   verbose = TRUE )"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-make_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make parameters for contrast code call — .make_parameters","text":"formula Formula given user params Parameter accumulator env Environment formula, first recursion pulled formula passed subsequent recursions. Needed check whether function actually function. verbose Logical, default TRUE, whether show drop_trends warning used incorrectly","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-make_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make parameters for contrast code call — .make_parameters","text":"Named list parameters can evaluated .process_contrasts()","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-make_placeholder_glimpse.html","id":null,"dir":"Reference","previous_headings":"","what":"Make glimpse for 1-level factors — .make_placeholder_glimpse","title":"Make glimpse for 1-level factors — .make_placeholder_glimpse","text":"user wants factors one level included, create table present information. lot NAs contrasts defined 1 level.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-make_placeholder_glimpse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make glimpse for 1-level factors — .make_placeholder_glimpse","text":"","code":".make_placeholder_glimpse(model_data, one_level_factors)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-make_placeholder_glimpse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make glimpse for 1-level factors — .make_placeholder_glimpse","text":"model_data Model data one_level_factors factors one level","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-make_placeholder_glimpse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make glimpse for 1-level factors — .make_placeholder_glimpse","text":"data.frame limited information one level factors","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-msg_if_coerced_to_factors.html","id":null,"dir":"Reference","previous_headings":"","what":"Alert user when factor coercion happens — .msg_if_coerced_to_factors","title":"Alert user when factor coercion happens — .msg_if_coerced_to_factors","text":"messages user columns dataset coerced factor, useful accidentally set column continuous data factor.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-msg_if_coerced_to_factors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alert user when factor coercion happens — .msg_if_coerced_to_factors","text":"","code":".msg_if_coerced_to_factors(which_to_factors)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-msg_if_coerced_to_factors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alert user when factor coercion happens — .msg_if_coerced_to_factors","text":"which_to_factors Names columns coerced factors","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-msg_if_coerced_to_factors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alert user when factor coercion happens — .msg_if_coerced_to_factors","text":"Nothing, messages user needed.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-msg_if_ordered_reset.html","id":null,"dir":"Reference","previous_headings":"","what":"Alert user when setting ordered factors — .msg_if_ordered_reset","title":"Alert user when setting ordered factors — .msg_if_ordered_reset","text":"Ordered factors use orthogonal polynomials (contr.poly) default k number levels -1 (k-1) trend comparisons. use functions set contrasts something else, ordered class (hence ordering levels) remain contrasts set something else.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-msg_if_ordered_reset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alert user when setting ordered factors — .msg_if_ordered_reset","text":"","code":".msg_if_ordered_reset(model_data, vars_in_model)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-msg_if_ordered_reset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alert user when setting ordered factors — .msg_if_ordered_reset","text":"model_data Data frame used model vars_in_model Variables check ","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-msg_if_ordered_reset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alert user when setting ordered factors — .msg_if_ordered_reset","text":"Nothing, messages user.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-msg_if_remaining_factors.html","id":null,"dir":"Reference","previous_headings":"","what":"Alert user if there are more factors — .msg_if_remaining_factors","title":"Alert user if there are more factors — .msg_if_remaining_factors","text":"messages user user factor columns model data frame specified along factors set contrasts .","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-msg_if_remaining_factors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alert user if there are more factors — .msg_if_remaining_factors","text":"","code":".msg_if_remaining_factors(model_data, specified_vars)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-msg_if_remaining_factors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alert user if there are more factors — .msg_if_remaining_factors","text":"model_data Model data specified_vars Variables specified user formulas","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-msg_if_remaining_factors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alert user if there are more factors — .msg_if_remaining_factors","text":"Nothing, messages user needed.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-plus_to_c.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle + in formula LHS — .plus_to_c","title":"Handle + in formula LHS — .plus_to_c","text":"Given formula like cyl + gear ~ sum_code, function recursively replaces + operators c LHS becomes c(cyl, gear).","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-plus_to_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle + in formula LHS — .plus_to_c","text":"","code":".plus_to_c(plus_expr)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-plus_to_c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle + in formula LHS — .plus_to_c","text":"plus_expr Expression","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-plus_to_c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle + in formula LHS — .plus_to_c","text":"new expression + replaced c()","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-plus_to_c.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Handle + in formula LHS — .plus_to_c","text":"function recurse function calls, example: cyl + gear + factor(1 + 2) evaluates c(cyl, gear, factor(1+2)).","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-postprocess_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Postprocess contrast matrices — .postprocess_matrix","title":"Postprocess contrast matrices — .postprocess_matrix","text":"using use_contrasts() function matrix, shared postprocessing steps manipulating contrasts set reference level, intercept, labels. as_is TRUE, post processing steps included.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-postprocess_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Postprocess contrast matrices — .postprocess_matrix","text":"","code":".postprocess_matrix(   new_contrasts,   code_by,   reference_level,   set_intercept,   drop_trends,   matrix_labels,   labels,   as_is,   dots )"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-postprocess_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Postprocess contrast matrices — .postprocess_matrix","text":"new_contrasts Contrast matrix passed use_contrasts() code_by code , passed use_contrasts() reference_level Reference level specification set_intercept Intercept specification drop_trends trends drop matrix_labels Labels matrix dimension names labels User-specified labels as_is Whether use matrix -dots additional arguments passed code_by","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-postprocess_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Postprocess contrast matrices — .postprocess_matrix","text":"Contrast matrix","code":""},{"path":[]},{"path":"https://tsostarics.github.io/contrastable/reference/dot-process_code_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Process code_by — .process_code_by","title":"Process code_by — .process_code_by","text":"Handles code_by parameter checks make sure whether can safely drop trends . Also handles usage ()","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-process_code_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process code_by — .process_code_by","text":"","code":".process_code_by(formula, params, env, verbose)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-process_code_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process code_by — .process_code_by","text":"formula Formula used set contrast params Parameter list env used verbose Whether throw warning invalid - usage","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-process_code_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process code_by — .process_code_by","text":"Modified parameter list updated code_by","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-process_contrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Pass arguments to contrast code — .process_contrasts","title":"Pass arguments to contrast code — .process_contrasts","text":"Processes formula arguments contrast matrix sets use_contrasts call","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-process_contrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pass arguments to contrast code — .process_contrasts","text":"","code":".process_contrasts(model_data, raw_formula, omit_drop)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-process_contrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pass arguments to contrast code — .process_contrasts","text":"model_data Data frame factor column raw_formula Raw formula omit_drop Logical, set TRUE set_contrasts used appending attribute formula list, otherwise FALSE (enlist_contrasts)","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-process_contrasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pass arguments to contrast code — .process_contrasts","text":"contrast matrix","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-process_factor_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Process factor column — .process_factor_col","title":"Process factor column — .process_factor_col","text":"usually first thing processed formula like varname ~ x; ensures varname treated factor vector","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-process_factor_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process factor column — .process_factor_col","text":"","code":".process_factor_col(cur_expr, params, env, verbose)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-process_factor_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process factor column — .process_factor_col","text":"cur_expr Current expression, see .make_parameters() params Parameter accumulator env Environment formula, first recursion pulled formula passed subsequent recursions. Needed check whether function actually function. verbose Logical, default TRUE, whether show drop_trends warning used incorrectly","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-process_factor_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process factor column — .process_factor_col","text":"Parameter list factor_col updated","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-reset_comparison_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset comparison labels of matrix to defaults — .reset_comparison_labels","title":"Reset comparison labels of matrix to defaults — .reset_comparison_labels","text":"Given contrast matrix coding function used generate , check whether default labels implemented. , use matrix unique ones. function provided, just use matrix use numeric indices","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-reset_comparison_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset comparison labels of matrix to defaults — .reset_comparison_labels","text":"","code":".reset_comparison_labels(contr_mat, coding_fx = NULL)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-reset_comparison_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset comparison labels of matrix to defaults — .reset_comparison_labels","text":"contr_mat Contrast matrix coding_fx Function name string","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-reset_comparison_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset comparison labels of matrix to defaults — .reset_comparison_labels","text":"Matrix column names changed necessary","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-set_intercept.html","id":null,"dir":"Reference","previous_headings":"","what":"Set intercept for contrast matrix — .set_intercept","title":"Set intercept for contrast matrix — .set_intercept","text":"Given contrast matrix desired level, change intercept via manipulating underlying hypothesis matrix.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-set_intercept.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set intercept for contrast matrix — .set_intercept","text":"","code":".set_intercept(contrast_matrix, intercept_level)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-set_intercept.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set intercept for contrast matrix — .set_intercept","text":"contrast_matrix Contrast matrix use intercept_level Level use intercept, must present row names contrast matrix","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-set_intercept.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set intercept for contrast matrix — .set_intercept","text":"Manipulated contrast matrix","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-set_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Process and set parameter — .set_param","title":"Process and set parameter — .set_param","text":"Unpacks given expression set parameter specified which_param params. Continues recursively setting parameters via .make_parameters().","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-set_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process and set parameter — .set_param","text":"","code":".set_param(cur_expr, params, env, which_param, verbose)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-set_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process and set parameter — .set_param","text":"cur_expr Current expression, formula list representation thereof params Parameter accumulator env Environment formula, first recursion pulled formula passed subsequent recursions. Needed check whether function actually function. which_param parameter set, string usage verbose Logical, default TRUE, whether show drop_trends warning used incorrectly","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-set_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process and set parameter — .set_param","text":"params","code":""},{"path":[]},{"path":"https://tsostarics.github.io/contrastable/reference/dot-split_if_language.html","id":null,"dir":"Reference","previous_headings":"","what":"Split contrast function using parens — .split_if_language","title":"Split contrast function using parens — .split_if_language","text":"something like set_contrasts(df, var ~ sum_code()) extracted formula symbol function sum_code language object. can converted list extract function symbol arguments provided parens. latter needs evaluated original environment, example set_contrasts(df, var ~ sum_code(scores=c(.1,.5,.6)) called, scores list evaluate c(...) call, yielding error scores argument right length (length 1, 3).","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-split_if_language.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split contrast function using parens — .split_if_language","text":"","code":".split_if_language(params, var_envir)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-split_if_language.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split contrast function using parens — .split_if_language","text":"params Parameters extracted formula parsing var_envir Environment evaluate expressions ","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-split_if_language.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split contrast function using parens — .split_if_language","text":"Parameter list code_by set correct symbol & additional list entry arguments, empty arguments provided.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-switch_reference_if_needed.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if reference switching is necessary — .switch_reference_if_needed","title":"Check if reference switching is necessary — .switch_reference_if_needed","text":"Check contrast matrix able switch reference levels, requested, ","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-switch_reference_if_needed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if reference switching is necessary — .switch_reference_if_needed","text":"","code":".switch_reference_if_needed(   contrast_matrix,   new_reference_label = NA,   new_reference_index )"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-switch_reference_if_needed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if reference switching is necessary — .switch_reference_if_needed","text":"contrast_matrix Contrast matrix new_reference_label Name level use new_reference_index Index level use","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-switch_reference_if_needed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if reference switching is necessary — .switch_reference_if_needed","text":"Contrast matrix reference level swapped needed","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-switch_reference_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Switch reference level in contrast matrix — .switch_reference_level","title":"Switch reference level in contrast matrix — .switch_reference_level","text":"Reorders rows contrast matrix properly set reference level","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-switch_reference_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Switch reference level in contrast matrix — .switch_reference_level","text":"","code":".switch_reference_level(contrast_matrix, old_reference, new_reference)"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-switch_reference_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Switch reference level in contrast matrix — .switch_reference_level","text":"contrast_matrix unlabeled contrast matrix old_reference previously specified reference level, usually default scheme found .get_reference_level new_reference index row use new reference level","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-switch_reference_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Switch reference level in contrast matrix — .switch_reference_level","text":"matrix reordered rows correct values reference level","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-warn_if_mismatched_contrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnose glimpse issues and send warnings — .warn_if_mismatched_contrasts","title":"Diagnose glimpse issues and send warnings — .warn_if_mismatched_contrasts","text":"glimpse_contrasts() modify dataframe passed , can result mismatches data user use glimpse information presented. runs many diagnostics inform use mismatches provides suggestions fix issue.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-warn_if_mismatched_contrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnose glimpse issues and send warnings — .warn_if_mismatched_contrasts","text":"","code":".warn_if_mismatched_contrasts(   model_data,   contrast_list,   model_data_name,   dots_names,   formulas )"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-warn_if_mismatched_contrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnose glimpse issues and send warnings — .warn_if_mismatched_contrasts","text":"model_data Data user passed glimpse_contrasts() contrast_list List contrasts created enlist_contrasts() model_data_name Name dataframe passed user, truncated long expression (likely) piped dots_names Usually \"...\", case, ... filled user (ie contrast formulas) need expanded suggested fixes formulas Formulas passed user","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-warn_if_mismatched_contrasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diagnose glimpse issues and send warnings — .warn_if_mismatched_contrasts","text":"Nothing, issues warnings user.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-warn_if_nondefault.html","id":null,"dir":"Reference","previous_headings":"","what":"Warn user if nondefault contrasts are set — .warn_if_nondefault","title":"Warn user if nondefault contrasts are set — .warn_if_nondefault","text":"R automatically assigns specific contrast schemes ordered unordered factors specified options('contrasts') users course free set factor . , outside call glimpse_contrasts hard time consuming check set different possible common schemes. , rather checking possible combinations, check defaults R already uses alert user something else set.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-warn_if_nondefault.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Warn user if nondefault contrasts are set — .warn_if_nondefault","text":"","code":".warn_if_nondefault(   contrast_list,   factor_names,   factor_sizes,   which_ordered,   schemes_to_use )"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-warn_if_nondefault.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Warn user if nondefault contrasts are set — .warn_if_nondefault","text":"contrast_list List contrasts like generated enlist_contrasts factor_names Names factors, also names contrast list factor_sizes Number levels factor which_ordered factors ordered schemes_to_use Character vector schemes, match default factor, replaced wtih ??? th eoutput","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-warn_if_nondefault.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Warn user if nondefault contrasts are set — .warn_if_nondefault","text":"Warns non default contrasts set, returns schemes_to_use modifications necessary","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-warn_if_onelevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Warn if one level factor — .warn_if_onelevel","title":"Warn if one level factor — .warn_if_onelevel","text":"Factors one level happen character vector converted factor using factor() without specifying anything levels parameter. try access set contrasts one-level factor, get error contrasts undefined 0 degrees freedom.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-warn_if_onelevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Warn if one level factor — .warn_if_onelevel","text":"","code":".warn_if_onelevel(   one_level_factors = NULL,   model_data = NULL,   attempting_factors = NULL )"},{"path":"https://tsostarics.github.io/contrastable/reference/dot-warn_if_onelevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Warn if one level factor — .warn_if_onelevel","text":"one_level_factors Character vector factors one level model_data Model data look factor columns attempting_factors Factor column names check","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/dot-warn_if_onelevel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Warn if one level factor — .warn_if_onelevel","text":"Nothing, warns factors one level detected.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/enlist_contrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"List of contrast matrices — enlist_contrasts","title":"List of contrast matrices — enlist_contrasts","text":"Returns named list contrast matrices use modeling functions directly. See set_contrasts() function set contrasts directly dataframe. See details syntax information","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/enlist_contrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of contrast matrices — enlist_contrasts","text":"","code":"enlist_contrasts(model_data, ..., verbose = getOption(\"contrastable.verbose\"))"},{"path":"https://tsostarics.github.io/contrastable/reference/enlist_contrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of contrast matrices — enlist_contrasts","text":"model_data Data frame intend passing model ... series 2 sided formulas factor name left hand side desired contrast scheme right hand side. reference level can set +, intercept can overwritten *, comparison labels can set using |, trends polynomial coding can removed using -. verbose Logical, defaults FALSE, whether messages printed","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/enlist_contrasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List of contrast matrices — enlist_contrasts","text":"List named contrast matrices. Internally, called within set_contrasts, return named list contrasts equal list named contrast matrices data equal passed model_data factor coercions applied (set_contrasts() need second time).","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/enlist_contrasts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List of contrast matrices — enlist_contrasts","text":"enlist_contrasts(), set_contrasts(), glimpse_contrasts() use special syntax set contrasts multiple factors. syntax consists two-sided formulas desired factor column left hand side contrast specification right hand side. example, varname ~ scaled_sum_code. Many contrasts support additional kinds contrast manipulations using overloaded operators: + X: Set reference level level named X. supported schemes singular reference level sum_code(), scaled_sum_code(), treatment_code(), stats::contr.treatment(), stats::contr.sum(), stats::contr.SAS(). Ignored schemes like helmert_code(). * X: Overwrite intercept mean level named X - :B: polynomial coding schemes , drop comparisons B. | c(...): Change comparison labels contrast matrix character vector c(...) length n-1. labels appear output/summary statistical model. Note brms::brm, instances - (minus sign) replaced M. can also specify multiple variables left hand side formula using tidyselect helpers. See examples information. Typically model functions like lm contrasts argument can set contrasts model run time, rather manually change contrasts underlying factor columns data. function return named list contrast matrices pass functions. Note function used within modeling function call, e.g., lm(y~x, data = model_data, contrasts = enlist_contrasts(model_data, x~sum_code)). Often, call enlist_contrasts twice, rather just . model fitting functions, like brms::brm, contrasts argument. cases, use set_contrasts() set contrasts directly factors dataframe. One good way use enlist_contrasts() conjunction MASS::fractions() create list matrices can printed explicitly show entire contrast matrices using models. can especially helpful supplementary materials academic paper. Sometimes using orthogonal polynomial contrasts stats::contr.poly() people drop higher level polynomials parsimony. Note however capture amount variation, even though orthogonal contrasts lower level polynomials estimates changed. Moreover, reduce contrast matrix matrix smaller size n*n-1 dataframe pass model fitting function , R try fill gaps something else. want drop contrasts need use something like enlist_contrasts(df, x ~ contr.poly - 3:5) pass contrasts argument model fitting function.","code":""},{"path":[]},{"path":"https://tsostarics.github.io/contrastable/reference/enlist_contrasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of contrast matrices — enlist_contrasts","text":"","code":"my_df <- mtcars my_df$gear <- factor(my_df$gear) my_df$carb <- factor(my_df$carb)  # Use formulas where left hand side is the factor column name # and the right hand side is the contrast scheme you want to use enlist_contrasts(   my_df,   gear ~ scaled_sum_code,   carb ~ helmert_code,   verbose = FALSE ) #> $gear #>            4          5 #> 3 -0.3333333 -0.3333333 #> 4  0.6666667 -0.3333333 #> 5 -0.3333333  0.6666667 #>  #> $carb #>     <2         <3    <4   <6         <8 #> 1 -0.5 -0.3333333 -0.25 -0.2 -0.1666667 #> 2  0.5 -0.3333333 -0.25 -0.2 -0.1666667 #> 3  0.0  0.6666667 -0.25 -0.2 -0.1666667 #> 4  0.0  0.0000000  0.75 -0.2 -0.1666667 #> 6  0.0  0.0000000  0.00  0.8 -0.1666667 #> 8  0.0  0.0000000  0.00  0.0  0.8333333 #>   # Add reference levels with + enlist_contrasts(   my_df,   gear ~ scaled_sum_code + 5,   carb ~ contr.sum + 6,   verbose = FALSE ) #> $gear #>            3          4 #> 3  0.6666667 -0.3333333 #> 4 -0.3333333  0.6666667 #> 5 -0.3333333 -0.3333333 #>  #> $carb #>    1  2  3  4  8 #> 1  1  0  0  0  0 #> 2  0  1  0  0  0 #> 3  0  0  1  0  0 #> 4  0  0  0  1  0 #> 6 -1 -1 -1 -1 -1 #> 8  0  0  0  0  1 #>  # Manually specifying matrix also works enlist_contrasts(   my_df,   gear ~ matrix(c(1, -1, 0, 0, -1, 1), nrow = 3),   carb ~ forward_difference_code,   verbose = FALSE ) #> $gear #>    4  5 #> 3 -1 -1 #> 4  1  0 #> 5  0  1 #>  #> $carb #>          1-2        2-3  3-4        4-6        6-8 #> 1  0.8333333  0.6666667  0.5  0.3333333  0.1666667 #> 2 -0.1666667  0.6666667  0.5  0.3333333  0.1666667 #> 3 -0.1666667 -0.3333333  0.5  0.3333333  0.1666667 #> 4 -0.1666667 -0.3333333 -0.5  0.3333333  0.1666667 #> 6 -0.1666667 -0.3333333 -0.5 -0.6666667  0.1666667 #> 8 -0.1666667 -0.3333333 -0.5 -0.6666667 -0.8333333 #>   # User matrices can be assigned to a variable first, but this may make the # comparison labels confusing. You should rename them manually to something # that makes sense. This will invoke use_contrast_matrix, so reference levels # specified with + will be ignored. my_gear_contrasts <- matrix(c(1, -1, 0, 0, -1, 1), nrow = 3) colnames(my_gear_contrasts) <- c(\"CMP1\", \"CMP2\") enlist_contrasts(   my_df,   gear ~ my_gear_contrasts,   carb ~ forward_difference_code,   verbose = FALSE ) #> $gear #>    4  5 #> 3 -1 -1 #> 4  1  0 #> 5  0  1 #>  #> $carb #>          1-2        2-3  3-4        4-6        6-8 #> 1  0.8333333  0.6666667  0.5  0.3333333  0.1666667 #> 2 -0.1666667  0.6666667  0.5  0.3333333  0.1666667 #> 3 -0.1666667 -0.3333333  0.5  0.3333333  0.1666667 #> 4 -0.1666667 -0.3333333 -0.5  0.3333333  0.1666667 #> 6 -0.1666667 -0.3333333 -0.5 -0.6666667  0.1666667 #> 8 -0.1666667 -0.3333333 -0.5 -0.6666667 -0.8333333 #>    # Will inform you if there are factors you didn't set enlist_contrasts(my_df, gear ~ scaled_sum_code) #> Expect contr.treatment or contr.poly for unset factors: carb #> $gear #>            4          5 #> 3 -0.3333333 -0.3333333 #> 4  0.6666667 -0.3333333 #> 5 -0.3333333  0.6666667 #>   # Use MASS::fractions to pretty print matrices for academic papers: lapply(enlist_contrasts(my_df, gear ~ scaled_sum_code, carb ~ helmert_code),        MASS::fractions) #> $gear #>   4    5    #> 3 -1/3 -1/3 #> 4  2/3 -1/3 #> 5 -1/3  2/3 #>  #> $carb #>   <2   <3   <4   <6   <8   #> 1 -1/2 -1/3 -1/4 -1/5 -1/6 #> 2  1/2 -1/3 -1/4 -1/5 -1/6 #> 3    0  2/3 -1/4 -1/5 -1/6 #> 4    0    0  3/4 -1/5 -1/6 #> 6    0    0    0  4/5 -1/6 #> 8    0    0    0    0  5/6 #>   # Use a list of formulas to use the same contrasts with different datasets my_contrasts <- list(gear ~ scaled_sum_code, carb ~ helmert_code) enlist_contrasts(my_df,  my_contrasts) #> $gear #>            4          5 #> 3 -0.3333333 -0.3333333 #> 4  0.6666667 -0.3333333 #> 5 -0.3333333  0.6666667 #>  #> $carb #>     <2         <3    <4   <6         <8 #> 1 -0.5 -0.3333333 -0.25 -0.2 -0.1666667 #> 2  0.5 -0.3333333 -0.25 -0.2 -0.1666667 #> 3  0.0  0.6666667 -0.25 -0.2 -0.1666667 #> 4  0.0  0.0000000  0.75 -0.2 -0.1666667 #> 6  0.0  0.0000000  0.00  0.8 -0.1666667 #> 8  0.0  0.0000000  0.00  0.0  0.8333333 #>  enlist_contrasts(mtcars, my_contrasts) #> Converting to factors: gear carb #> $gear #>            4          5 #> 3 -0.3333333 -0.3333333 #> 4  0.6666667 -0.3333333 #> 5 -0.3333333  0.6666667 #>  #> $carb #>     <2         <3    <4   <6         <8 #> 1 -0.5 -0.3333333 -0.25 -0.2 -0.1666667 #> 2  0.5 -0.3333333 -0.25 -0.2 -0.1666667 #> 3  0.0  0.6666667 -0.25 -0.2 -0.1666667 #> 4  0.0  0.0000000  0.75 -0.2 -0.1666667 #> 6  0.0  0.0000000  0.00  0.8 -0.1666667 #> 8  0.0  0.0000000  0.00  0.0  0.8333333 #>   # Use tidyselect helpers to set multiple variables at once # These are all equivalent contr_list1 <- enlist_contrasts(mtcars,                  cyl ~ sum_code, gear ~ sum_code,                  verbose = FALSE)  contr_list2 <- enlist_contrasts(mtcars,                  cyl + gear ~ sum_code,                  verbose = FALSE)  contr_list3 <- enlist_contrasts(mtcars,                  c(cyl, gear) ~ sum_code,                  verbose = FALSE)  contr_list4 <- enlist_contrasts(mtcars,                  all_of(c('cyl', 'gear')) ~ sum_code,                  verbose = FALSE)   these_vars <- c(\"cyl\", \"gear\") contr_list5 <- enlist_contrasts(mtcars,                                 all_of(these_vars) ~ sum_code,                                 verbose = FALSE)  all.equal(contr_list1, contr_list2) #> [1] TRUE all.equal(contr_list2, contr_list3) #> [1] TRUE all.equal(contr_list3, contr_list4) #> [1] TRUE all.equal(contr_list4, contr_list5) #> [1] TRUE  # You can also use [tidyselect::where()] with class checking helpers: contr_list6 <- enlist_contrasts(mtcars,                                 where(is.numeric) ~ sum_code,                                 verbose = FALSE)  # Each variable name must only be set ONCE, e.g. these will fail: try(enlist_contrasts(mtcars,                      cyl ~ sum_code,                      cyl ~ scaled_sum_code,                      verbose = FALSE)) #> Error : In `pkgdown::build_site_github_pages(new_process = FALSE, install = ...`:  #> Names must be unique. #> ✖ These names are duplicated: #>   * \"cyl\" at locations 1 and 2. #> ℹ Left hand side of multiple formulas evaluated to the same column name try(enlist_contrasts(mtcars,                      cyl ~ sum_code,                      all_of(these_vars) ~ scaled_sum_code,                      verbose = FALSE)) #> Error : In `pkgdown::build_site_github_pages(new_process = FALSE, install = ...`:  #> Names must be unique. #> ✖ These names are duplicated: #>   * \"cyl\" at locations 1 and 2. #> ℹ Left hand side of multiple formulas evaluated to the same column name try(enlist_contrasts(mtcars,                      cyl ~ sum_code,                      where(is.numeric) ~ scaled_sum_code,                      verbose = FALSE)) #> Error : In `pkgdown::build_site_github_pages(new_process = FALSE, install = ...`:  #> Names must be unique. #> ✖ These names are duplicated: #>   * \"cyl\" at locations 1 and 3. #> ℹ Left hand side of multiple formulas evaluated to the same column name"},{"path":"https://tsostarics.github.io/contrastable/reference/find_same_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Find column with same non-positive values — find_same_col","title":"Find column with same non-positive values — find_same_col","text":"inverse matrix contrast matrix useful property , removing row corresponding intercept, reference level column index value column (1) (2) less equal 0.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/find_same_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find column with same non-positive values — find_same_col","text":"","code":"find_same_col(invmatrix)"},{"path":"https://tsostarics.github.io/contrastable/reference/find_same_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find column with same non-positive values — find_same_col","text":"invmatrix Inverse hypothesis matrix","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/find_same_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find column with same non-positive values — find_same_col","text":"Integer index reference level, reference level, NA returned","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/find_same_col.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find column with same non-positive values — find_same_col","text":"contrast matrix generated expression x, number levels n, consider inverse matrices solve(.contrasts_to_hypotheses(x)) different x: contr.treatment: first column contains 0s, hence reference level first level contr.SAS: last column contains 0s, hence reference level last level scaled_sum_code: first column contains -1/n, hence reference level first level helmert_code: first column contains negative numbers, EXCEPT n=2 Note \"reference level\" defined level every level compared via pairwise comparisons.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/forward_difference_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Forward difference code — forward_difference_code","title":"Forward difference code — forward_difference_code","text":"Compares mean level k level k+1. Differs direction backward_difference_code, careful pick right function. See also contr.sdif.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/forward_difference_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forward difference code — forward_difference_code","text":"","code":"forward_difference_code(n)"},{"path":"https://tsostarics.github.io/contrastable/reference/forward_difference_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forward difference code — forward_difference_code","text":"n Integer umber factor levels compute contrasts .","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/forward_difference_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forward difference code — forward_difference_code","text":"contrast matrix dimensions n rows (n-1) columns.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/forward_difference_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Forward difference code — forward_difference_code","text":"Example interpretation 4 level factor: Intercept = Grand mean (mean means level) grp1 = mean(grp1) - mean(grp2) grp2 = mean(grp2) - mean(grp3) grp3 = mean(grp3) - mean(grp4)","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/forward_difference_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forward difference code — forward_difference_code","text":"","code":"mydf <- data.frame(   grp = gl(4,5),   resp = c(seq(1, 5), seq(5, 9), seq(10, 14), seq(15, 19)) )  mydf <- set_contrasts(mydf, grp ~ forward_difference_code)  lm(resp ~ grp, data = mydf) #>  #> Call: #> lm(formula = resp ~ grp, data = mydf) #>  #> Coefficients: #> (Intercept)       grp1-2       grp2-3       grp3-4   #>        9.75        -4.00        -5.00        -5.00   #>"},{"path":"https://tsostarics.github.io/contrastable/reference/glimpse_contrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Glimpse contrasts in dataframe — glimpse_contrasts","title":"Glimpse contrasts in dataframe — glimpse_contrasts","text":"Uses syntax enlist_contrasts() set_contrasts(). Returns summary table contrasts set. set return.list=TRUE can access list contrasts second element resulting list. glimpse dataframe first element. FALSE return just glimpse data frame.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/glimpse_contrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Glimpse contrasts in dataframe — glimpse_contrasts","text":"","code":"glimpse_contrasts(   model_data,   ...,   return_list = FALSE,   show_all_factors = TRUE,   add_namespace = FALSE,   show_one_level_factors = FALSE,   minimal = TRUE,   verbose = getOption(\"contrastable.verbose\") )"},{"path":"https://tsostarics.github.io/contrastable/reference/glimpse_contrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Glimpse contrasts in dataframe — glimpse_contrasts","text":"model_data Data passed model fitting function ... Series formulas return_list Logical, defaults FALSE, whether output enlist_contrasts returned show_all_factors Logical, defaults TRUE, whether factors explicitly set formulas included add_namespace Logical, defaults FALSE, whether append namespace contrast scheme scheme name show_one_level_factors Logical, factors one level included output? Default FALSE omit minimal Logical, default TRUE, whether omit orthogonal, centered, dropped_trends, explicitly_set columns output table verbose Logical, defaults TRUE, whether messages printed","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/glimpse_contrasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Glimpse contrasts in dataframe — glimpse_contrasts","text":"dataframe return.list FALSE, list dataframe list named contrasts TRUE.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/glimpse_contrasts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Glimpse contrasts in dataframe — glimpse_contrasts","text":"Generally, glimpse_contrasts give warnings mismatches specified contrasts actually set factors dataframe. warnings typically tell resolve mismatches. See contrasts warnings vignettes information.","code":""},{"path":[]},{"path":"https://tsostarics.github.io/contrastable/reference/glimpse_contrasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Glimpse contrasts in dataframe — glimpse_contrasts","text":"","code":"my_contrasts <- list(cyl ~ sum_code, carb ~ helmert_code) my_data <- set_contrasts(mtcars, my_contrasts, verbose = FALSE) my_data$gear <- factor(my_data$gear) # Make gear a factor manually  # View information about contrasts; gear will use default for unordered glimpse_contrasts(my_data, my_contrasts) #>   factor n  level_names          scheme reference  intercept #> 1    cyl 3      4, 6, 8        sum_code      <NA> grand mean #> 2   carb 6 1, 2, 3,....    helmert_code      <NA> grand mean #> 3   gear 3      3, 4, 5 contr.treatment         3    mean(3)"},{"path":"https://tsostarics.github.io/contrastable/reference/helmert_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Helmert code — helmert_code","title":"Helmert code — helmert_code","text":"R's stats::contr.helmert() function unscaled, meaning need scale coefficients model fit get actual comparisons interest. version automatically scale contrast matrix coefficients expected scaled values.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/helmert_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helmert code — helmert_code","text":"","code":"helmert_code(n)"},{"path":"https://tsostarics.github.io/contrastable/reference/helmert_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helmert code — helmert_code","text":"n Integer umber factor levels compute contrasts .","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/helmert_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helmert code — helmert_code","text":"contrast matrix dimensions n rows (n-1) columns.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/helmert_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Helmert code — helmert_code","text":"Helmert coding compares level total mean levels come . Differs backward difference coding, compares pairs levels (level cumulative mean levels) Example interpretation 4 level factor: Intercept = Grand mean (mean means level) grp2 = mean(grp2) - mean(grp1) grp3 = mean(grp3) - mean(grp1, grp2) grp4 = mean(grp4) - mean(grp1, grp2, grp3)","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/helmert_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helmert code — helmert_code","text":"","code":"mydf <- data.frame(   grp = gl(4,5),   resp = c(seq(1, 5), seq(5, 9), seq(10, 14), seq(15, 19)) )  mydf <- set_contrasts(mydf, grp ~ helmert_code) lm(resp ~ grp, data = mydf) #>  #> Call: #> lm(formula = resp ~ grp, data = mydf) #>  #> Coefficients: #> (Intercept)        grp<2        grp<3        grp<4   #>       9.750        4.000        7.000        9.667   #>"},{"path":"https://tsostarics.github.io/contrastable/reference/interpret_intercept.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret intercept from contrasts — interpret_intercept","title":"Interpret intercept from contrasts — interpret_intercept","text":"Given contrast matrix, try interpret intercept. usually either grand mean, mean reference level (e.g. contr.treatment), unweighted mean multiple levels. Anything else indicate custom weights user provided, hence know interpret .","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/interpret_intercept.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret intercept from contrasts — interpret_intercept","text":"","code":"interpret_intercept(contrast_matrix)"},{"path":"https://tsostarics.github.io/contrastable/reference/interpret_intercept.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret intercept from contrasts — interpret_intercept","text":"contrast_matrix Contrast matrix","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/interpret_intercept.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpret intercept from contrasts — interpret_intercept","text":"string describing interpret effect intercept coding scheme ","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/interpret_intercept.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpret intercept from contrasts — interpret_intercept","text":"","code":"interpret_intercept(contr.treatment(2)) # mean(1) #> [1] \"mean(1)\" interpret_intercept(contr.SAS(2)) # mean(2) #> [1] \"mean(2)\" interpret_intercept(contr.sum(2)) # grand mean #> [1] \"grand mean\"  # Here there are 3 levels but the intercept is either an unweighted # mean of 2 levels or a weighted mean of 2 levels unweighted_intercept <-   solve(t(matrix(c(.5, .5, 0, -1, 1, 0, -1, 0, 1), nrow = 3)))[, 2:3] weighted_intercept <-   solve(t(matrix(c(.8, .2, 0, -1, 1, 0, -1, 0, 1), nrow = 3)))[, 2:3]  interpret_intercept(unweighted_intercept) # mean(1,2) #> [1] \"mean(1,2)\" interpret_intercept(weighted_intercept) # custom weights #> [1] \"custom weights\""},{"path":"https://tsostarics.github.io/contrastable/reference/is.unordered.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for unordered factor — is.unordered","title":"Check for unordered factor — is.unordered","text":"Helper check factor exclusively unordered. .factor(x) TRUE x unordered ordered.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/is.unordered.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for unordered factor — is.unordered","text":"","code":"is.unordered(x)"},{"path":"https://tsostarics.github.io/contrastable/reference/is.unordered.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for unordered factor — is.unordered","text":"x vector data","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/is.unordered.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for unordered factor — is.unordered","text":"TRUE x unordered factor, FALSE x factor ordered factor","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/is.unordered.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for unordered factor — is.unordered","text":"","code":"is.unordered(gl(5,1)) # True #> [1] TRUE is.unordered(gl(5,1,ordered = TRUE)) # False #> [1] FALSE"},{"path":"https://tsostarics.github.io/contrastable/reference/is_centered.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for orthogonality — is_centered","title":"Check for orthogonality — is_centered","text":"Given contrast matrix list contrast matrices (eg enlist_contrasts()), return logical vector whether contrast centered .","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/is_centered.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for orthogonality — is_centered","text":"","code":"is_centered(contrast_matrices, USE.NAMES = FALSE)"},{"path":"https://tsostarics.github.io/contrastable/reference/is_centered.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for orthogonality — is_centered","text":"contrast_matrices Contrast matrix list contrast matrices USE.NAMES Logical, whether vector named","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/is_centered.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for orthogonality — is_centered","text":"Logical vector, retain names passed list","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/is_centered.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for orthogonality — is_centered","text":"","code":"is_centered(treatment_code(5)) # FALSE #> [1] FALSE is_centered(scaled_sum_code(5)) # TRUE #> [1] TRUE"},{"path":"https://tsostarics.github.io/contrastable/reference/is_orthogonal.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for orthogonality — is_orthogonal","title":"Check for orthogonality — is_orthogonal","text":"Given contrast matrix list contrast matrices (eg enlist_contrasts() ), return logical vector whether contrast orthogonal .","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/is_orthogonal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for orthogonality — is_orthogonal","text":"","code":"is_orthogonal(contrast_matrices, USE.NAMES = FALSE)"},{"path":"https://tsostarics.github.io/contrastable/reference/is_orthogonal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for orthogonality — is_orthogonal","text":"contrast_matrices Contrast matrix list contrast matrices USE.NAMES Logical, whether vector named","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/is_orthogonal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for orthogonality — is_orthogonal","text":"Logical vector, retain names passed list","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/is_orthogonal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for orthogonality — is_orthogonal","text":"","code":"is_orthogonal(treatment_code(5)) # FALSE #> [1] FALSE is_orthogonal(helmert_code(5)) # TRUE #> [1] TRUE"},{"path":"https://tsostarics.github.io/contrastable/reference/orth_polynomial_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Orthogonal Polynomial code — orth_polynomial_code","title":"Orthogonal Polynomial code — orth_polynomial_code","text":"Wrapper around stats::contr.poly(). can also use polynomial_code() alias.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/orth_polynomial_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Orthogonal Polynomial code — orth_polynomial_code","text":"","code":"orth_polynomial_code(n)  polynomial_code(n)"},{"path":"https://tsostarics.github.io/contrastable/reference/orth_polynomial_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Orthogonal Polynomial code — orth_polynomial_code","text":"n Integer umber factor levels compute contrasts .","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/orth_polynomial_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Orthogonal Polynomial code — orth_polynomial_code","text":"contrast matrix dimensions n rows (n-1) columns.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/orth_polynomial_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Orthogonal Polynomial code — orth_polynomial_code","text":"n levels factors k 1:n, generate matrix n-1 comparisons comparison looks polynomial trend degree k polynomial independent others.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/orth_polynomial_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Orthogonal Polynomial code — orth_polynomial_code","text":"","code":"mydf <- data.frame(   grp = rep(c(\"a\", \"b\", \"c\", \"d\"), each = 2000),   val = c(     rnorm(200, 2, 1),     rnorm(200, 5, 1),     rnorm(200, 7.5, 1),     rnorm(200, 15, 1)   ) ) |>   set_contrasts(grp ~ polynomial_code) #> Converting to factors: grp  stats::lm(val ~ grp, data = mydf) #>  #> Call: #> stats::lm(formula = val ~ grp, data = mydf) #>  #> Coefficients: #> (Intercept)        grp.L        grp.Q        grp.C   #>   7.309e+00    6.805e-01   -5.055e-16    1.361e+00   #>"},{"path":"https://tsostarics.github.io/contrastable/reference/raw_polynomial_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Raw Polynomial code — raw_polynomial_code","title":"Raw Polynomial code — raw_polynomial_code","text":"Make raw polynomial contrast, rather orthogonal ones. Normally use orthogonal polynomials, make sure want. Using raw polynomials may increase collinearity model, especially higher numbers levels.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/raw_polynomial_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raw Polynomial code — raw_polynomial_code","text":"","code":"raw_polynomial_code(n)"},{"path":"https://tsostarics.github.io/contrastable/reference/raw_polynomial_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raw Polynomial code — raw_polynomial_code","text":"n Integer umber factor levels compute contrasts .","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/raw_polynomial_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raw Polynomial code — raw_polynomial_code","text":"contrast matrix dimensions n rows (n-1) columns.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/raw_polynomial_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Raw Polynomial code — raw_polynomial_code","text":"n levels factors k 1:n, generate matrix n-1 comparisons comparison looks polynomial trend degree k, polynomial may correlated others. Normally use orthogonal polynomials, see stats::contr.poly() orth_polynomial_code()","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/raw_polynomial_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raw Polynomial code — raw_polynomial_code","text":"","code":"mydf <- data.frame(   grp = rep(c(\"a\", \"b\", \"c\", \"d\"), each = 2000),   val = c(     rnorm(200, 2, 1),     rnorm(200, 5, 1),     rnorm(200, 7.5, 1),     rnorm(200, 15, 1)   ) ) |>   set_contrasts(grp ~ raw_polynomial_code) #> Converting to factors: grp  stats::lm(val ~ grp, data = mydf) #>  #> Call: #> stats::lm(formula = val ~ grp, data = mydf) #>  #> Coefficients: #> (Intercept)        grp.L        grp.Q        grp.C   #>      -4.284       17.623       -7.775        1.037   #>"},{"path":"https://tsostarics.github.io/contrastable/reference/reverse_helmert_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse Helmert code — reverse_helmert_code","title":"Reverse Helmert code — reverse_helmert_code","text":"Reverse helmert coding concept helmert coding, order groupings reversed. See also helmert_code.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/reverse_helmert_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse Helmert code — reverse_helmert_code","text":"","code":"reverse_helmert_code(n)"},{"path":"https://tsostarics.github.io/contrastable/reference/reverse_helmert_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse Helmert code — reverse_helmert_code","text":"n Integer umber factor levels compute contrasts .","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/reverse_helmert_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse Helmert code — reverse_helmert_code","text":"contrast matrix dimensions n rows (n-1) columns.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/reverse_helmert_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reverse Helmert code — reverse_helmert_code","text":"Reverse helmert coding compares level total mean levels come . Differs forward difference coding, compares pairs levels (level cumulative mean levels). Example interpretation 4 level factor: Intercept = Grand mean (mean means level) grp1 = mean(grp4, grp3, grp2) - grp(1) grp2 = mean(grp4, grp3) - mean(grp2) grp3 = mean(grp3) - mean(grp4)","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/reverse_helmert_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverse Helmert code — reverse_helmert_code","text":"","code":"mydf <- data.frame(   grp = gl(4,5),   resp = c(seq(1, 5), seq(5, 9), seq(10, 14), seq(15, 19)) )  mydf <- set_contrasts(mydf, grp ~ reverse_helmert_code) lm(resp ~ grp, data = mydf) #>  #> Call: #> lm(formula = resp ~ grp, data = mydf) #>  #> Coefficients: #> (Intercept)        grp>1        grp>2        grp>3   #>        9.75        -9.00        -7.50        -5.00   #>"},{"path":"https://tsostarics.github.io/contrastable/reference/scaled_sum_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Scaled sum coding — scaled_sum_code","title":"Scaled sum coding — scaled_sum_code","text":"Contrast coding scheme centered intercept comparisons baseline reference level.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/scaled_sum_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scaled sum coding — scaled_sum_code","text":"","code":"scaled_sum_code(n)"},{"path":"https://tsostarics.github.io/contrastable/reference/scaled_sum_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scaled sum coding — scaled_sum_code","text":"n Integer umber factor levels compute contrasts .","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/scaled_sum_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scaled sum coding — scaled_sum_code","text":"contrast matrix dimensions n rows (n-1) columns.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/scaled_sum_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scaled sum coding — scaled_sum_code","text":"name contrast scheme varies widely different fields across experimental psychology papers. called simple, sum, contrast, sum--zero, deviation coding (among names). package uses scaled sum coding explicitly differentiate sum coding, implementation base R contr.sum. n levels factors, generate matrix n-1 comparisons : Reference level = -1/n Comparison level = (n-1)/n others = -1/n Example interpretation 4 level factor: Intercept = Grand mean (mean means level) grp2 = mean(grp2) - mean(grp1) grp3 = mean(grp3) - mean(grp1) grp4 = mean(grp4) - mean(grp1) Note: grp coefficient estimates contr.treatment, intercept changed grand mean instead mean grp1. also important note coding scheme contr.sum/2 number levels greater 2. n=2, estimates contr.sum can interpreted \"half distance levels\" k>2, contr.sum interpreted \"distance level GRAND MEAN\". may tempted use contr.sum(n)/2, tests hypothesis 3/2 times mean level equal half sum means levels, .e., \\(1.5\\mu_1 - .5\\mu_2 - .5\\mu_3 - .5\\mu_4 = 0\\), likely looking .","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/scaled_sum_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scaled sum coding — scaled_sum_code","text":"","code":"# Compare these two, note that contr.sum(4)/2 is not the same scaled_sum_code(4) #>       2     3     4 #> 1 -0.25 -0.25 -0.25 #> 2  0.75 -0.25 -0.25 #> 3 -0.25  0.75 -0.25 #> 4 -0.25 -0.25  0.75 contr.sum(4) #>   [,1] [,2] [,3] #> 1    1    0    0 #> 2    0    1    0 #> 3    0    0    1 #> 4   -1   -1   -1  # Here they happen to be equivalent (modulo reference level) scaled_sum_code(2) #>      2 #> 1 -0.5 #> 2  0.5 contr.sum(2) / 2 #>   [,1] #> 1  0.5 #> 2 -0.5  mydf <- data.frame(   grp = gl(4,5),   resp = c(seq(1, 5), seq(5, 9), seq(10, 14), seq(15, 19)) )  mydf <- set_contrasts(mydf, grp ~ scaled_sum_code)  lm(resp ~ grp, data = mydf) #>  #> Call: #> lm(formula = resp ~ grp, data = mydf) #>  #> Coefficients: #> (Intercept)         grp2         grp3         grp4   #>        9.75         4.00         9.00        14.00   #>"},{"path":"https://tsostarics.github.io/contrastable/reference/set_contrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Set contrasts to dataframe — set_contrasts","title":"Set contrasts to dataframe — set_contrasts","text":"Uses syntax enlist_contrasts(), returns dataframe new contrasts applied. Use model function doesnt contrasts argument want avoid writing contrasts<- multiple times. See enlist_contrasts() details package-specific syntax.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/set_contrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set contrasts to dataframe — set_contrasts","text":"","code":"set_contrasts(   model_data,   ...,   verbose = getOption(\"contrastable.verbose\"),   print_contrasts = FALSE )"},{"path":"https://tsostarics.github.io/contrastable/reference/set_contrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set contrasts to dataframe — set_contrasts","text":"model_data Data frame intend passing model ... series 2 sided formulas factor name left hand side desired contrast scheme right hand side. reference level can set +, intercept can overwritten *, comparison labels can set using |, trends polynomial coding can removed using -. verbose Logical, defaults FALSE, whether messages printed print_contrasts Logical, default FALSE, whether print contrasts set factor. Fractions displayed using MASS::fractions()","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/set_contrasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set contrasts to dataframe — set_contrasts","text":"model_data dataframe, updated contrasts.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/set_contrasts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set contrasts to dataframe — set_contrasts","text":"enlist_contrasts(), set_contrasts(), glimpse_contrasts() use special syntax set contrasts multiple factors. syntax consists two-sided formulas desired factor column left hand side contrast specification right hand side. example, varname ~ scaled_sum_code. Many contrasts support additional kinds contrast manipulations using overloaded operators: + X: Set reference level level named X. supported schemes singular reference level sum_code(), scaled_sum_code(), treatment_code(), stats::contr.treatment(), stats::contr.sum(), stats::contr.SAS(). Ignored schemes like helmert_code(). * X: Overwrite intercept mean level named X - :B: polynomial coding schemes , drop comparisons B. | c(...): Change comparison labels contrast matrix character vector c(...) length n-1. labels appear output/summary statistical model. Note brms::brm, instances - (minus sign) replaced M. can also specify multiple variables left hand side formula using tidyselect helpers. See examples information. Typically model functions like lm contrasts argument can set contrasts model run time, rather manually change contrasts underlying factor columns data. function return named list contrast matrices pass functions. Note function used within modeling function call, e.g., lm(y~x, data = model_data, contrasts = enlist_contrasts(model_data, x~sum_code)). Often, call enlist_contrasts twice, rather just . model fitting functions, like brms::brm, contrasts argument. cases, use set_contrasts() set contrasts directly factors dataframe. One good way use enlist_contrasts() conjunction MASS::fractions() create list matrices can printed explicitly show entire contrast matrices using models. can especially helpful supplementary materials academic paper. Sometimes using orthogonal polynomial contrasts stats::contr.poly() people drop higher level polynomials parsimony. Note however capture amount variation, even though orthogonal contrasts lower level polynomials estimates changed. Moreover, reduce contrast matrix matrix smaller size n*n-1 dataframe pass model fitting function , R try fill gaps something else. want drop contrasts need use something like enlist_contrasts(df, x ~ contr.poly - 3:5) pass contrasts argument model fitting function.","code":""},{"path":[]},{"path":"https://tsostarics.github.io/contrastable/reference/set_contrasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set contrasts to dataframe — set_contrasts","text":"","code":"head(    set_contrasts(mtcars, carb + cyl ~ helmert_code, print_contrasts = TRUE) ) #> Converting to factors: carb cyl #> $carb #>   <2   <3   <4   <6   <8   #> 1 -1/2 -1/3 -1/4 -1/5 -1/6 #> 2  1/2 -1/3 -1/4 -1/5 -1/6 #> 3    0  2/3 -1/4 -1/5 -1/6 #> 4    0    0  3/4 -1/5 -1/6 #> 6    0    0    0  4/5 -1/6 #> 8    0    0    0    0  5/6 #>  #> $cyl #>   <6   <8   #> 4 -1/2 -1/3 #> 6  1/2 -1/3 #> 8    0  2/3 #>  #>                    mpg cyl disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2 #> Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1"},{"path":"https://tsostarics.github.io/contrastable/reference/sum_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum code — sum_code","title":"Sum code — sum_code","text":"Wrapper around contr.sum, ensures reference level first level alphabetically, last. Returns contrast matrix comparisons give differences comparison levels grand mean.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/sum_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum code — sum_code","text":"","code":"sum_code(n)"},{"path":"https://tsostarics.github.io/contrastable/reference/sum_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum code — sum_code","text":"n Integer umber factor levels compute contrasts .","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/sum_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum code — sum_code","text":"contrast matrix dimensions n rows (n-1) columns.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/sum_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sum code — sum_code","text":"n levels factors, generate matrix n-1 comparisons : Reference level = -1 Comparison level = 1 others = 0 Example interpretation 4 level factor: Intercept = Grand mean (mean means level) grp2 = grp2 - mean(grp4, grp3, grp2, grp1) grp3 = grp3 - mean(grp4, grp3, grp2, grp1) grp4 =  grp4 - mean(grp4, grp3, grp2, grp1) Note n = 2, coefficient estimate half difference two levels. , coincidence hold number levels greater 2.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/sum_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sum code — sum_code","text":"","code":"mydf <- data.frame(   grp = gl(4,5),   resp = c(seq(1, 5), seq(5, 9), seq(10, 14), seq(15, 19)) )  mydf <- set_contrasts(mydf, grp ~ sum_code)  lm(resp ~ grp, data = mydf) #>  #> Call: #> lm(formula = resp ~ grp, data = mydf) #>  #> Coefficients: #> (Intercept)         grp2         grp3         grp4   #>        9.75        -2.75         2.25         7.25   #>"},{"path":"https://tsostarics.github.io/contrastable/reference/treatment_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Treatment code — treatment_code","title":"Treatment code — treatment_code","text":"Wrapper around stats::contr.treatment(). Returns contrast matrix comparisons give differences comparison level baseline reference level, intercept equals first level factor. See scaled_sum_code() function centers intercept grand mean retaining pairwise comparisons reference level.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/treatment_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Treatment code — treatment_code","text":"","code":"treatment_code(n)"},{"path":"https://tsostarics.github.io/contrastable/reference/treatment_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Treatment code — treatment_code","text":"n Integer umber factor levels compute contrasts .","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/treatment_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Treatment code — treatment_code","text":"contrast matrix dimensions n rows (n-1) columns.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/treatment_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Treatment code — treatment_code","text":"n levels factors, generate matrix n-1 comparisons : Reference level = 0 Comparison level = 1 others = 0 Note function sets first level (alphabetically) reference level  stats::contr.SAS() sets LAST level reference level. However, functions like set_contrasts(), enlist_contrasts(), reference level automatically set first level alphabetically.","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/treatment_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Treatment code — treatment_code","text":"","code":"mydf <- data.frame(   grp = gl(4,5),   resp = c(seq(1, 5), seq(5, 9), seq(10, 14), seq(15, 19)) )  mydf <- set_contrasts(mydf, grp ~ treatment_code)  lm(resp ~ grp, data = mydf) #>  #> Call: #> lm(formula = resp ~ grp, data = mydf) #>  #> Coefficients: #> (Intercept)         grp2         grp3         grp4   #>           3            4            9           14   #>"},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.AsIs.html","id":null,"dir":"Reference","previous_headings":"","what":"AsIs method for use_contrasts — use_contrasts.AsIs","title":"AsIs method for use_contrasts — use_contrasts.AsIs","text":"Evaluates code_by, applies appropriate use_contrasts method","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.AsIs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AsIs method for use_contrasts — use_contrasts.AsIs","text":"","code":"# S3 method for class 'AsIs' use_contrasts(   factor_col,   code_by = NA,   reference_level = NA,   set_intercept = NA,   drop_trends = NA,   labels = NULL,   as_is = FALSE,   ... )"},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.AsIs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AsIs method for use_contrasts — use_contrasts.AsIs","text":"factor_col factor vector, eg df$factorVarName code_by symbol evaluated reference_level level use reference level, default NA set_intercept intercept use, default NA drop_trends trends drop, default NA labels vector labels apply matrix column names, default NULL (new labels) as_is Logical, default FALSE, whether leave resulting matrix -... Additional arguments passed ","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.AsIs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AsIs method for use_contrasts — use_contrasts.AsIs","text":"contrast coding matrix labels proper reference level","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.AsIs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AsIs method for use_contrasts — use_contrasts.AsIs","text":"","code":"use_contrasts(gl(5,1), I(scaled_sum_code)) #>      2    3    4    5 #> 1 -0.2 -0.2 -0.2 -0.2 #> 2  0.8 -0.2 -0.2 -0.2 #> 3 -0.2  0.8 -0.2 -0.2 #> 4 -0.2 -0.2  0.8 -0.2 #> 5 -0.2 -0.2 -0.2  0.8"},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default method for use_contrasts — use_contrasts.default","title":"Default method for use_contrasts — use_contrasts.default","text":"user specify contrast matrix, use defaults options(). user tries use something know work , throw warning using defaults options().","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default method for use_contrasts — use_contrasts.default","text":"","code":"# Default S3 method use_contrasts(   factor_col,   code_by = NA,   reference_level = NA,   set_intercept = NA,   drop_trends = NA,   labels = NULL,   as_is = FALSE,   ... )"},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default method for use_contrasts — use_contrasts.default","text":"factor_col factor vector, eg df$factorVarName code_by object matrix function. NA, warning thrown, default contrasts used. warning thrown NA. reference_level used set_intercept used drop_trends used labels vector labels apply matrix column names, default as_is Logical, default FALSE, whether leave resulting matrix ... Additional arguments, used","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default method for use_contrasts — use_contrasts.default","text":"Contrast matrix, using ordered unordered default options()","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default method for use_contrasts — use_contrasts.default","text":"","code":"use_contrasts(gl(5,1), helmert_code) # a function #>      2          3     4    5 #> 1 -0.5 -0.3333333 -0.25 -0.2 #> 2  0.5 -0.3333333 -0.25 -0.2 #> 3  0.0  0.6666667 -0.25 -0.2 #> 4  0.0  0.0000000  0.75 -0.2 #> 5  0.0  0.0000000  0.00  0.8 my_matrix <- helmert_code(5) use_contrasts(gl(5,1), my_matrix) # a matrix #>      2          3     4    5 #> 1 -0.5 -0.3333333 -0.25 -0.2 #> 2  0.5 -0.3333333 -0.25 -0.2 #> 3  0.0  0.6666667 -0.25 -0.2 #> 4  0.0  0.0000000  0.75 -0.2 #> 5  0.0  0.0000000  0.00  0.8"},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.function.html","id":null,"dir":"Reference","previous_headings":"","what":"Function method for use_contrasts — use_contrasts.function","title":"Function method for use_contrasts — use_contrasts.function","text":"user provides function, use function supplied arguments create contrast matrix","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function method for use_contrasts — use_contrasts.function","text":"","code":"# S3 method for class '`function`' use_contrasts(   factor_col,   code_by = NA,   reference_level = NA,   set_intercept = NA,   drop_trends = NA,   labels = NULL,   as_is = FALSE,   ... )"},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function method for use_contrasts — use_contrasts.function","text":"factor_col factor vector, eg df$factorVarName code_by function called, return contrast matrix reference_level name level use reference level, default NA set_intercept intercept use, default NA drop_trends trends drop, default NA labels vector labels apply matrix column names, default as_is Logical, default FALSE, whether leave resulting matrix ... Additional arguments passed code_by()","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function method for use_contrasts — use_contrasts.function","text":"contrast coding matrix labels proper reference level","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function method for use_contrasts — use_contrasts.function","text":"","code":"use_contrasts(gl(5,1), sum_code) #>    2  3  4  5 #> 1 -1 -1 -1 -1 #> 2  1  0  0  0 #> 3  0  1  0  0 #> 4  0  0  1  0 #> 5  0  0  0  1"},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Contrast code factors — use_contrasts","title":"Contrast code factors — use_contrasts","text":"Helper contrast coding. two options: Manually specify matrix code_by (implements use_contrast_matrix). Reference level automatically set row always negative. Specify style contrast coding function. Label reference level specified ...","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contrast code factors — use_contrasts","text":"","code":"use_contrasts(   factor_col,   code_by = NA,   reference_level = NA,   set_intercept = NA,   drop_trends = NA,   labels = NULL,   as_is = FALSE,   ... )"},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contrast code factors — use_contrasts","text":"factor_col factor column use, eg data$gender code_by Either matrix function reference_level level use reference level, default NA set_intercept intercept use, default NA drop_trends Whether drop trends, default NA labels Labels use contrast matrix, must equal number contrasts as_is Logical, default FALSE, whether suppress auto switching reference level first level specified ... Additional arguments passed use_contrast_function, specifically, level want reference level ","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contrast code factors — use_contrasts","text":"contrast coding matrix labels proper reference level","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contrast code factors — use_contrasts","text":"","code":"# Create a contrast matrix given some factor vector with the specified # reference level use_contrasts(gl(5,2), sum_code, reference_level = 3) #>    1  2  4  5 #> 1  1  0  0  0 #> 2  0  1  0  0 #> 3 -1 -1 -1 -1 #> 4  0  0  1  0 #> 5  0  0  0  1  # Set column labels; order for labels is the same as the column indices use_contrasts(gl(3,2), scaled_sum_code, labels = c(\"2-1\", \"3-1\")) #>          2-1        3-1 #> 1 -0.3333333 -0.3333333 #> 2  0.6666667 -0.3333333 #> 3 -0.3333333  0.6666667  my_data <- mtcars my_data$gear <- factor(mtcars$gear)  MASS::fractions(use_contrasts(my_data$gear, helmert_code)) #>   4    5    #> 3 -1/2 -1/3 #> 4  1/2 -1/3 #> 5    0  2/3"},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.hypr.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a hypr object for contrasts — use_contrasts.hypr","title":"Use a hypr object for contrasts — use_contrasts.hypr","text":"Use hypr object contrasts","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.hypr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a hypr object for contrasts — use_contrasts.hypr","text":"","code":"# S3 method for class 'hypr' use_contrasts(   factor_col,   code_by = NA,   reference_level = NA,   set_intercept = NA,   drop_trends = NA,   labels = NULL,   as_is = FALSE,   ... )"},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.hypr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use a hypr object for contrasts — use_contrasts.hypr","text":"factor_col factor vector, eg df$factorVarName code_by hypr object created hypr::hypr() reference_level used set_intercept used drop_trends used labels vector labels apply matrix column names, default as_is Logical, default FALSE, whether leave resulting matrix ... Additional arguments, used","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.hypr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use a hypr object for contrasts — use_contrasts.hypr","text":"Contrast matrix specified hypr object","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.hypr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use a hypr object for contrasts — use_contrasts.hypr","text":"","code":"hypr_obj <- hypr::hypr(a ~ b, c ~ b) # centered pairwise comparisons to b  use_contrasts(factor(c('a', 'b', 'c')), hypr_obj) #>   [,1] [,2] #> a  2/3 -1/3 #> b -1/3 -1/3 #> c -1/3  2/3"},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix method for use_contrasts — use_contrasts.matrix","title":"Matrix method for use_contrasts — use_contrasts.matrix","text":"user provides raw matrix, use matrix contrast matrix","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrix method for use_contrasts — use_contrasts.matrix","text":"","code":"# S3 method for class 'matrix' use_contrasts(   factor_col,   code_by = NA,   reference_level = NA,   set_intercept = NA,   drop_trends = NA,   labels = NULL,   as_is = FALSE,   ... )"},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrix method for use_contrasts — use_contrasts.matrix","text":"factor_col factor vector, eg df$factorVarName code_by matrix used contrast matrix, dimensions contrast matrix already applied code_by reference_level used set_intercept used drop_trends used labels vector labels apply matrix column names, default as_is Logical, default FALSE, whether leave resulting matrix ... Additional arguments, used","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matrix method for use_contrasts — use_contrasts.matrix","text":"contrast coding matrix labels proper reference level","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Matrix method for use_contrasts — use_contrasts.matrix","text":"","code":"contrast_matrix <- sum_code(4) use_contrasts(gl(4,1), contrast_matrix) #>    2  3  4 #> 1 -1 -1 -1 #> 2  1  0  0 #> 3  0  1  0 #> 4  0  0  1"},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.name.html","id":null,"dir":"Reference","previous_headings":"","what":"Symbol method for use_contrasts — use_contrasts.name","title":"Symbol method for use_contrasts — use_contrasts.name","text":"Evaluates code_by, applies appropriate use_contrasts method","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Symbol method for use_contrasts — use_contrasts.name","text":"","code":"# S3 method for class 'name' use_contrasts(   factor_col,   code_by = NA,   reference_level = NA,   set_intercept = NA,   drop_trends = NA,   labels = NULL,   as_is = FALSE,   ... )"},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Symbol method for use_contrasts — use_contrasts.name","text":"factor_col factor vector, eg df$factorVarName code_by symbol evaluated reference_level level use reference level, default NA set_intercept intercept use, default NA drop_trends trends drop, default NA labels vector labels apply matrix column names, default NULL (new labels) as_is Logical, default FALSE, whether leave resulting matrix -... Additional arguments passed ","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Symbol method for use_contrasts — use_contrasts.name","text":"contrast coding matrix labels proper reference level","code":""},{"path":"https://tsostarics.github.io/contrastable/reference/use_contrasts.name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Symbol method for use_contrasts — use_contrasts.name","text":"","code":"aliased_scheme <- sum_code contrast_scheme <- rlang::sym(\"aliased_scheme\")  # Result will be as if sum_code was used directly use_contrasts(gl(5,1), contrast_scheme) #>    2  3  4  5 #> 1 -1 -1 -1 -1 #> 2  1  0  0  0 #> 3  0  1  0  0 #> 4  0  0  1  0 #> 5  0  0  0  1"},{"path":[]},{"path":"https://tsostarics.github.io/contrastable/news/index.html","id":"contrastable-102","dir":"Changelog","previous_headings":"","what":"contrastable 1.0.2","title":"contrastable 1.0.2","text":"CRAN release: 2024-10-01 Accepted CRAN: https://CRAN.R-project.org/package=contrastable.","code":""},{"path":[]},{"path":"https://tsostarics.github.io/contrastable/news/index.html","id":"contrastable-100","dir":"Changelog","previous_headings":"","what":"contrastable 1.0.0","title":"contrastable 1.0.0","text":"Initial CRAN submission.","code":""}]
